node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1855
          }
        }
        tensor_content: "\000\000@@\000\000@@\000\000\200@\000\000\240@\000\000\300@\000\000\000@\000\000@@\000\000@@\000\000\240@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000\200@\000\000\300@\000\000\240@\000\000\000@\000\000\000@\000\000\240@\000\000\240@\000\000\000@\000\000\000\000\000\000\240@\000\000\000@\000\0000A\000\000@@\000\000\000@\000\000\200?\000\000\000\000\000\000@@\000\000@@\000\000\000@\000\000\300@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\240@\000\000\200@\000\000\240@\000\000\000@\000\000\200@\000\000\000@\000\000\200?\000\000\000\000\000\000\200@\000\000\300@\000\000\300@\000\000@@\000\000\000@\000\000\200@\000\000\000A\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\000\000\000\000\240@\000\000\340@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\340@\000\000\200?\000\000\200@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000\200@\000\000\000\000\000\000\240@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\200@\000\000@@\000\000\200@\000\000\200@\000\000\020A\000\000\000@\000\000\200@\000\000\200@\000\000\200@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\240@\000\000@@\000\000@@\000\000\240@\000\000@@\000\000\000@\000\000\200@\000\000\300@\000\000\240@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000\000\000\000\000\200@\000\000@@\000\000\240@\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\000@\000\000\300@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\200@\000\000\200@\000\000\300@\000\000@@\000\000@@\000\000\200?\000\000\200@\000\000@@\000\000@@\000\000@@\000\000\300@\000\000@@\000\000\300@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\200?\000\000\000\000\000\000@@\000\000@@\000\000\240@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\240@\000\000@@\000\000\340@\000\000@@\000\000\200?\000\000@@\000\000\240@\000\000\200?\000\000\000@\000\000\200@\000\000@@\000\000\000\000\000\000\200@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000\240@\000\000\300@\000\000\000@\000\000\200@\000\000\200@\000\000\000\000\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000\000A\000\000\240@\000\000\300@\000\000@@\000\000\200?\000\000\000\000\000\000\200?\000\000@@\000\000\300@\000\000\200@\000\000\240@\000\000\000@\000\000\200@\000\000\240@\000\000@@\000\000\240@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000\240@\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000\240@\000\000\000@\000\000@@\000\000@@\000\000\200?\000\000\000@\000\000\200?\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000\200?\000\000\000\000\000\000@@\000\000@@\000\000\240@\000\000\200?\000\000\200?\000\000@@\000\000\000@\000\000\300@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\300@\000\000\240@\000\000\000@\000\000@@\000\000@@\000\000\000\000\000\000@@\000\000\200?\000\000@@\000\000@@\000\000\200@\000\000\200?\000\000@@\000\000\240@\000\000\200@\000\000@@\000\000\300@\000\000\240@\000\000@@\000\000\200?\000\000@@\000\000\240@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000\000\000\000\000\000@\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000\000\000\000\000\240@\000\000\000@\000\000@@\000\000\240@\000\000\240@\000\000\200?\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\200@\000\000\200@\000\000\200?\000\000@@\000\000@@\000\000\240@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\240@\000\000\200?\000\000\200?\000\000\200@\000\000@@\000\000@@\000\000@@\000\000\340@\000\000@@\000\000\200@\000\000@@\000\000\240@\000\000\240@\000\000@@\000\000\200@\000\000\240@\000\000@@\000\000\200@\000\000\200?\000\000@@\000\000\240@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000\000A\000\000\200?\000\000\000@\000\000@@\000\000\300@\000\000\240@\000\000\000@\000\000\200@\000\000\300@\000\000\000\000\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000\000\000\000\000\300@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\300@\000\000\240@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\200?\000\000\240@\000\000@@\000\000\200@\000\000\000\000\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\340@\000\000\200@\000\000\200?\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\200@\000\000\240@\000\000@@\000\000\200@\000\000\000@\000\000\340@\000\000\240@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\240@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\200@\000\000\200@\000\000\000@\000\000\200?\000\000\200@\000\000\000\000\000\000\000@\000\000\240@\000\000\240@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\200?\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\000\000\000\000\300@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\240@\000\000\000@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\300@\000\000\300@\000\000\300@\000\000@@\000\000\300@\000\000\240@\000\000@@\000\000\000@\000\000\200?\000\000\240@\000\000\200@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\240@\000\000@@\000\000\200?\000\000\200@\000\000@@\000\000\200?\000\000\200?\000\000@@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000\340@\000\000@@\000\000\000\000\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000 A\000\000\300@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\000\000\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\000\000\000\000\240@\000\000\000@\000\000@@\000\000\240@\000\000@@\000\000\200@\000\000\300@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000\000A\000\000\300@\000\000@@\000\000@@\000\000@@\000\000\240@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\240@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000\000\000\000\000@@\000\000\200?\000\000\200@\000\000\000\000\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000\240@\000\000@@\000\000\200@\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\240@\000\000@@\000\000\240@\000\000@@\000\000\200?\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000\240@\000\000\200@\000\000\300@\000\000\200@\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\300@\000\000@@\000\000\000@\000\000\240@\000\000\200@\000\000\300@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000\240@\000\000\200@\000\000\200?\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000\240@\000\000\000@\000\000\200@\000\000\000@\000\000\200?\000\000\200?\000\000@@\000\000@@\000\000\240@\000\000@@\000\000@@\000\000\300@\000\000\240@\000\000\300@\000\000@@\000\000\000@\000\000@@\000\000\240@\000\000\000@\000\000\240@\000\000\200@\000\000@@\000\000\200?\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\240@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\200?\000\000\000@\000\000\340@\000\000\200@\000\000\200@\000\000\000@\000\000\240@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\200@\000\000\000\000\000\000\000@\000\000\240@\000\000\200@\000\000\200@\000\000\000@\000\000\000\000\000\000\000@\000\000\000@\000\000\000\000\000\000\000@\000\000\240@\000\000@@\000\000\240@\000\000\200@\000\000\240@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\240@\000\000\300@\000\000\000@\000\000\240@\000\000\200@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\200@\000\000\240@\000\000\200@\000\000@@\000\000\000@\000\000\240@\000\000\240@\000\000\000@\000\000\000\000\000\000\300@\000\000\300@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000\200?\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000\000\000\000\000@@\000\000\000@\000\000\240@\000\000\200?\000\000@@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\240@\000\000\340@\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000\200?\000\000@@\000\000\200@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\300@\000\000\240@\000\000@@\000\000@@\000\000@@\000\000\300@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000\240@\000\000\300@\000\000\240@\000\000@@\000\000\240@\000\000@@\000\000@@\000\000\000@\000\000\000\000\000\000\200?\000\000\000@\000\000\200@\000\000\200?\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000\200@\000\000\200?\000\000@@\000\000\200@\000\000\200?\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000\200@\000\000\200@\000\000\300@\000\000@@\000\000\240@\000\000\200@\000\000@@\000\000\340@\000\000@@\000\000\000@\000\000\300@\000\000\200@\000\000@@\000\000\000@\000\000\000\000\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000\200@\000\000\200@\000\000\240@\000\000\240@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000\200?\000\000@@\000\000@@\000\000\200@\000\000\300@\000\000\200@\000\000\000\000\000\000\000@\000\000\200?\000\000\000@\000\000\340@\000\000\200@\000\000@@\000\000\000@\000\000\000@\000\000\300@\000\000\000@\000\000\200@\000\000\240@\000\000@@\000\000@@\000\000\200?\000\000\200@\000\000\000@\000\000\200?\000\000@@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000\000\000\000\000\200?\000\000\000@\000\000\200@\000\000\200@\000\000@@\000\000\200@\000\000\240@\000\000\000@\000\000\000\000\000\000@@\000\000\300@\000\000@@\000\000\000@\000\000\200?\000\000\200@\000\000\000@\000\000\000\000\000\000\200@\000\000\200@\000\000\200?\000\000\000@\000\000@@\000\000\200?\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\240@\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\000\000\000\000\000@\000\000@@\000\000\200@\000\000\200?\000\000\000\000\000\000@@\000\000\240@\000\000\200@\000\000\240@\000\000\240@\000\000\340@\000\000\340@\000\000@@\000\000\240@\000\000@@\000\000@@\000\000\200?\000\000\000@\000\000\200@\000\000\200@\000\000\200@\000\000@@\000\000\200@\000\000\200@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000\240@\000\000\240@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\240@\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\240@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\000@\000\000\240@\000\000\000@\000\000@@\000\000\240@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000\000\000\000\200@\000\000\300@\000\000\000\000\000\000\200?\000\000\000@\000\000\000A\000\000\200@\000\000\000@\000\000\200?\000\000@@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000@@\000\000@@\000\000\300@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\300@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000\240@\000\000\000@\000\000\000@\000\000@@\000\000\200@\000\000\200@\000\000\200?\000\000\000@\000\000\200@\000\000\200@\000\000\240@\000\000\000@\000\000\000@\000\000\000\000\000\000\000@\000\000\300@\000\000@@\000\000\240@\000\000\000@\000\000\200@\000\000\240@\000\000\000@\000\000\240@\000\000\200@\000\000@@\000\000@@\000\000\300@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\000\000\000\000\000@\000\000\000\000\000\000@@\000\000\240@\000\000@@\000\000\200?\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000\200@\000\000\300@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\240@\000\000\000\000\000\000@@\000\000\200@\000\000\200@\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000\200@\000\000\240@\000\000@@\000\000\240@\000\000@@\000\000@@\000\000\300@\000\000@@\000\000@@\000\000\000\000\000\000\000@\000\000\240@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000\240@\000\000@@\000\000@@\000\000\000@\000\000\200?\000\000\000@\000\000\000\000\000\000\240@\000\000@@\000\000\200@\000\000\000@\000\000\200@\000\000\000@\000\000\200?\000\000\240@\000\000@@\000\000\200@\000\000\200@\000\000\200?\000\000\200?\000\000@@\000\000\300@\000\000\200@\000\000@@\000\000\200@\000\000\020A\000\000\200@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000\300@\000\000\200@\000\000\200@\000\000\000@\000\000\200@\000\000\200@\000\000\000@\000\000\200@\000\000\240@\000\000\000A\000\000@@\000\000\240@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000\200?\000\000\200@\000\000\200@\000\000\340@\000\000@@\000\000\000\000\000\000\200@\000\000@@\000\000\000@\000\000\200@\000\000\200@\000\000\200?\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\340@\000\000\000@\000\000\000\000\000\000\200?\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\000\000\000\000@@\000\000\200@\000\000\240@\000\000\300@\000\000\200@\000\000\240@\000\000@@\000\000\000@\000\000\200@\000\000\200@\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000\200@\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\240@\000\000\340@\000\000@A\000\000@@\000\000@@\000\000@@\000\000\300@\000\000\200@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000\200@\000\000\240@\000\000@@\000\000\000@\000\000@@\000\000\300@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000\240@\000\000@@\000\000\000\000\000\000@@\000\000\200?\000\000\200@\000\000\000A\000\000@@\000\000\000\000\000\000@@\000\000\000@\000\000\200?\000\000\200@\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000\000\000\000\000\000\000\000\000@@\000\000@@\000\000\000@\000\000\240@\000\000@@\000\000\200@\000\000\000@\000\000\200@\000\000\000@\000\000\240@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000\000\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000\240@\000\000\200@\000\000\200@\000\000\200?\000\000\000@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\240@\000\000@@\000\000\200@\000\000@@\000\000\300@\000\000\000@\000\000@A\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\300@\000\000@@\000\000@@\000\000\200?\000\000\240@\000\000@@\000\000\240@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000\200?\000\000\200@\000\000\200@\000\000\240@\000\000@@\000\000\200?\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\200?\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\300@\000\000\240@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\000\000\000\000\200@\000\000@@\000\000\340@\000\000\200?\000\000\000A\000\000@@\000\000\200@\000\000\000@\000\000\240@\000\000@@\000\000\200@\000\000\000\000\000\000\200?\000\000\300@\000\000@@\000\000\240@\000\000\000@\000\000\200@\000\000@@\000\000\240@\000\000\200@\000\000\300@\000\000\240@\000\000@@\000\000\240@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\000\000\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000\200@\000\000\300@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000\200?\000\000\000@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000\200@\000\000\300@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\200?\000\000\000@\000\000\200@\000\000\000@\000\000\000\000\000\000\200@\000\000@@\000\000\000@\000\000\000\000\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000\200@\000\000\000@\000\000@@\000\000\240@\000\000@@\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\240@\000\000@@\000\000\200?\000\000@@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\240@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\240@\000\000\200?\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\000@\000\000\000@\000\000\000@\000\000\000\000\000\000\000@\000\000\000\000\000\000\000@\000\000@@\000\000\200@\000\000\000\000\000\000@@\000\000\300@\000\000\000@\000\000\300@\000\000\000@\000\000\200@\000\000\300@\000\000\240@\000\000@@\000\000\300@\000\000\340@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\000\000\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000\240@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\340@\000\000\200@\000\000\240@\000\000\240@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000\200@\000\000\200@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\300@\000\000\000@\000\000@@\000\000\300@\000\000@@\000\000\000\000\000\000\200@\000\000\200@\000\000\000@\000\000\240@\000\000@@\000\000\200@\000\000\240@\000\000\200?\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000\000\000\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\240@\000\000\200?\000\000\000@\000\000\240@\000\000@@\000\000\300@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\300@\000\000\000\000\000\000\240@\000\000@@\000\000\300@\000\000\240@\000\000\000@\000\000\000@\000\000@@\000\000\240@\000\000\200@\000\000@@\000\000\200?\000\000@@\000\000\200@\000\000\200@\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\000\000\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000@@\000\000\300@\000\000\000@\000\000\240@\000\000\200@\000\000\240@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\200?\000\000\300@\000\000@@\000\000\200@\000\000\200@\000\000\200@\000\000\000@\000\000\240@\000\000\000@\000\000\200@\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000\200?\000\000@@\000\000\000A\000\000@@\000\000\000\000\000\000\200@\000\000\000@\000\000\240@\000\000\000@\000\000\000\000\000\000\000@\000\000\000\000\000\000@@\000\000\200?\000\000@@\000\000\240@\000\000\000\000\000\000\200@\000\000@@\000\000\000@\000\000\240@\000\000\000@\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\000\000\000\000\200@\000\000\240@\000\000\240@\000\000\200?\000\000@@\000\000\240@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\000\000\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000\000\000\000\000\200?\000\000\200@\000\000\000\000\000\000\000@\000\000\000\000\000\000\000@\000\000\000@\000\000\200?\000\000\240@\000\000@@\000\000\000\000\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\000\000\000\000\240@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000\240@\000\000\240@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000\240@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\200@\000\000\240@\000\000\200@\000\000\200@\000\000@@\000\000\240@\000\000\000@\000\000\000\000\000\000\200@\000\000@@\000\000\200@\000\000\240@\000\000\200?\000\000@@\000\000\000@\000\000\200@\000\000\200?\000\000@@\000\000\200?\000\000\000@\000\000\200@\000\000\200@\000\000\300@\000\000\200@\000\000\000\000\000\000\000@\000\000@@\000\000\200?\000\000@@\000\000\300@\000\000\000@\000\000\000\000\000\000\240@\000\000\200@\000\000\200?\000\000@@\000\000\240@\000\000\200@\000\000\240@\000\000\200@\000\000\240@\000\000\200@\000\000\200@\000\000\000@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\240@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\240@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000\240@"
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1855
          }
        }
        tensor_content``@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000\000\000\000\000\240@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\200?\000\000\000@\000\000\000@\000\000\000A\000\000\340@\000\000\200?\000\000@@\000\000\220@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000\000\000\000\300@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\240@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\200?\000\000 @\000\000\000@\000\000\000@\000\000\000\000\000\000@@\000\000\000@\000\000`@\000\000\000@\000\000\000@\000\0000A\000\000@@\000\000\200?\000\000\200?\000\000\000@\000\000@@\000\000\000@\000\000\300@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\240@\000\000\000A\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\300?\000\000``@\000\000\200@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\240@\000\000\300?\000\000\200?\000\000\200@\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000````@\000\000\200@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000 @\000\000\000@\000\000 @\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\300@\000\000\200?\000\000\200?\000\000 @\000\000\240@\000\000\000@\000\000\200?\000\000\200?\000\000@@\000\000@@\000\000\000@\000\000\300?\000\000`@\000\000 @\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000\200?\000\000@@\000\000\200@\000\000\000@\000\000\200?\000\000@@\000\000\200@\000\000@@\000\000\300@\000\000\000@\000\000 @\000\000\200@\000\000@@\000\000 @\000\000@@\000\000\200?\000\000``@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000\000\000\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\200?\000\000\240@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000 @\000\000@@\000\000 @\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000\300@\000\000\000@\000\000\000@\000\000\240@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\240@\000\000\000@\000\000\000\000\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\220@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\000\000\000\000\000@\000\000\000@\000\000\240@\000\000\000@\000\000\200@\000\000\000@\000\000\200?\000\000\200@\000\000\000@\000\000\000@\000\000\200@\000\000\300?\000\000\300?\000\000\000@\000\000\340@\000\000\200@\000\000\200@\000\000\200@\000\000\240@\000\000\200@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000 @\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\240@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000\240@\000\000\200?\000\000\200@\000\000\240@\000\000\360@\000\000\200?\000\000\300@\000\000@@\000\000\000@\000\000@@\000\000 @\000\000\200?\000\000\200?\000\000\000@\000\000@@\000\000\240@\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\000A\000\000@@\000\000\200?\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\300@\000\000\200?\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\020@\000\000\000@\000\000\000@\000\000\240@\000\000\000@\000\000\000\000\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000\240@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\240@\000\000\300@\000\000\000@\000\000\240@\000\000@@\000\000\000@\000\000\240@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000\200@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\200@\000\000p`@\000\000\000@\000\000\300@\000\000\200?\000\000\020A\000\000 @\000\000 @\000\000\000@\000\000\200@\000\000@@\000\000 @\000\000\000\000\000\000\200?\000\000\200@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\240@\000\000\000@\000\000\360@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\200?\000\000 @\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\000\000\000\000\200?\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\200?\000\000\200@\000\000@@\000\000\200@\000\000\200?\000\000@@\000\000\200@\000\000\300@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\000\000\000\000@@\000\000\000@\000\000\000@\000\000\000\000\000\000@@\000\000\200?\000\000@@\000\000\240@\000\000@@\000\000\200?\000\000\200?\000\000@@\000\000\000@\000\000\200?\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000\300@\000\000@@\000\000\200?\000\000```p@"
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1855
          }
        }
        tensor_content: "\000`\355D\000 \325D\000@gE\000(\206E\000\300\227E\000\000zD\000\340\212D\000\300\375D\000\000\177E\000@\226D\000\000\\D\000\000\310D\000`\256D\000@\327D\000\300\203E\000@\022E\000\340\226D\000\000\322C\000\000\026E\000\000\026E\000\300\213D\000\270\272E\000`)E\000\000\214D\000P\264E\000\000\372D\000 \370D\000\200oD\000P\233E\000\300\010E\000\300\225D\000\200\245D\000\014\037F\000\030\314E\000@ E\000\220\003E\000\000\275D\000\200\001E\000p\366E\000\000/E\000@\335D\000 dE\000\000eD\000\300\211D\000 )E\000 \312D\000\250UF\000\200\004E\000@\264D\000\300\246D\000\200\273E\000\330\362E\000@\003E\000 \310D\000\340IE\000\000\342D\000@\250D\000\2005D\000\200\326D\000@FD\000\200WD\000\300\363D\000\300\320D\000\200;E\000`0E\000\310\241E\000\000\372D\000\240\"E\000\300\031E\000@\307D\000\000\202D\000\000\265D\000\240\204D\000`\010E\000\240\267D\000\200\254E\000\000*D\000\320#E\000@\324D\000\340\254D\000\340\243D\000\000\327D\000\240\214D\000P\007E\000\200\343D\000\200\356C\000\300ZE\000\240\304D\000\240\005E\000\300\277D\000\300ZE\000\260\030E\000`\013E\000\000pD\000\360\223E\000\300\320D\000\300\360D\000\200\306D\000``E\000\020\003E\000\240\001F\000\200~D\000\300TE\000\000\347D\000@\277D\000\340\006E\000\300\273D\000\300zE\000\240\236D\000`\305D\000\000\\E\000`\021E\000\300\336D\000 \200E\000\000\356D\000`\266D\000\340\353D\000\340\323E\000H\307E\000\240\227D\000\220\026E\000\000\223D\000@\203D\000\300)E\000\200dD\000\200\220D\000\220fE\000@uD\000\300\007E\000\340\204D\000\000aD\000\000\234D\000\200/E\000 (E\000\000\207D\000\240\007E\000\240\255D\000@\330D\000\000\202D\000\200YE\000\020cE\000\300\312D\000\310\003F\000@\016E\000\200KD\000 \225D\000@\214D\000\340{E\000\240\357D\000\320\tE\000\000\026E\000\000\223D\000\300_D\000@5E\000\300\350D\000\000\324D\000\300\266D\000 \231E\000\220\004E\000\230\212E\000`\356D\000\200\265D\000@\260D\000`\344D\000\300\200D\000 \377D\000\2001D\000\300\274D\000\200\tE\000\200TE\000\300BE\000\000\333D\000\320\014E\000\000fD\000\300\220D\000 \206D\000\300\227D\000@\000E\000\000\266D\000@\316D\000\000\251D\000\000\233D\000@\375D\000@\234E\000\340\rE\000\020VE\000\340\244D\000@-D\000@\260D\000\000/E\000\000?D\000\200\267D\000\360WE\000\200~D\000\350\313E\000`\343D\000\340\rE\000\260\025E\000\000\201D\000\300bE\000\300\262D\000\270\224E\000\030\354E\000@\264D\000\240\314D\000\300\217E\000\270\202E\000\200\332D\000P\001E\000\200\220D\000\300\306D\000\020bE\000 \366D\000`\206E\000@\301D\000\200>D\000P6E\000\2001D\000\300\332D\000PFE\000\220OE\000\020KE\000\000QD\000\000\313D\000\200TE\000\200\216D\000\310\337E\000\300\250D\000\240\227D\000 \217D\000\200\312D\000\340\022E\000\000pD\000\000\377D\000`\233D\000\300\tE\000``E\000\200\215D\000\300\260D\000\200;E\000\340\267D\000\300\241E\000\3007E\000\340!E\000\000MD\000\200\211D\000\200\370D\000\3007D\000\300\001E\000@/D\000\340RE\000@\342D\000\300\215D\000@\277D\000\000;D\000`1E\000\200\301D\0000\004E\000X\233E\000\2007D\000\000RD\000\240\313D\000\000zD\0008\322E\000@\257D\000\000HE\000\340\232D\000@\202E\000\000gE\000P\036E\000\000iD\000`\032E\000\300\313D\000\370\276E\000`\256D\000\000\036D\000\240\360D\000P\005E\000\200\314D\000\200ID\000\000\227D\000\240EE\000\000HE\000\360\007E\000x\247E\000\220\317E\000`\344D\000\300cD\000@\241D\000\000<E\000P\'E\000\200\206D\000\000\310D\000\000\316D\000\000HE\000@\316D\000\200\315D\000@\237E\000\200\347D\000@\311D\000\200mE\000 7E\000\300XD\0000\030E\000p\007E\000\240\306E\000\000-D\000\000\242D\000 \377D\000@\301D\000\300\243D\000\300#D\000\000\275D\000\300\213D\000\200\223D\000\340\320D\000\340LE\000\340\355D\000\000rD\000 \321D\000\200{D\000\300^E\000\340\335D\000\200ID\000\240\276D\000\300\233D\000\200\212D\000@&E\000\000.D\000\000\032D\000\340\344D\000\000\250D\000\000\341D\000\0002E\000XKF\000\000\264D\000\240\341D\000\240\233D\000\360!E\000\340\020E\000\200\216D\000pEE\000\000HE\000\200\350D\000\0004E\000\200\tD\000\300\026E\0000\224E\000\000\363D\000\200\266D\000\340\242D\000\200YD\000\2006E\000\000FD\000\200\"E\000\000\333D\000\340\321D\000p0E\000\200\033D\000\200yD\000\340\345D\000\370\335E\000@\013F\000\000WD\000\000\276D\000\220\241E\000\200\315C\000\300\216D\000\000\215D\000@\221D\000\300\344D\000\000\360D\000\020\366E\000\000\250D\000\360$E\000\300\214D\000\340\316D\000@\202E\0000)E\000\200\203D\000\300\332D\000\340\325D\000\000CD\000\300ZD\000 \353D\000\200\tE\000@\246D\000`|E\000 _E\000\000\257D\000\000\004E\000\200\301D\000`\273D\000\320\204F\000\360#E\000\000wD\000\300\200D\000\000\341D\000\240\276D\000\000\241D\000pzE\000\200ZE\000@\010E\000\240\026E\000\200\216D\000\220\203E\000p\353E\000\300\243D\000\300xD\000\300pD\000\200\306D\000\200mD\000@\363D\000\300\332D\000\200\333D\000@\324D\000\000\245D\000\000\207D\000\300\265D\000\000pE\000\2404E\000`cE\000@\346D\000\200,D\000@yD\000\000WD\000\240\340D\000@\234D\000@vD\000\000*E\000\200\324D\000\200XD\000\000]D\000\200\304D\000\220LF\000\340\314D\000\030\261E\000\200/E\000\000XD\000\000\322D\000`\242D\000\000IE\000\300\234D\000\340\323D\000@\211D\000@ME\000\340\366D\000\000\241D\000\000\234D\000\000\252D\000@\303D\000\340\262D\000\200\311D\000\000\226D\000\340\326D\000\000\305D\000\200\324D\000\200\324D\000\200\374D\000@\003E\000\300\223D\000\000\272D\000 \365D\000\340\316D\000`VE\000\340\351D\000\300rD\000\200\261D\000@\310D\000@\260D\000\240\262D\000\0004E\000h\361E\000 \313E\000\000\226D\000@\272D\000\240\027E\000\240\301D\000\000WD\0000\324E\000\000\341D\000\000WE\000 \311D\000\360jE\000\300\005E\000\310\315E\000\200\312E\000\350\tF\000@\306D\000\200\201E\000\370\216E\000\340\307D\000@\253D\000\300\311D\000\340uE\000\300\253E\000\200\034E\000\000LD\000\200\324D\000\300\017E\000\340\237D\000@\273D\000\300\212D\000@\316D\000\370\201E\000\200\235D\000\000\200?\000\200-E\000@\234D\000\000+D\000\300ZD\000\200\273D\000\300\017E\000\2006E\000@\325D\000@\025E\000\240\213D\000\000\252D\000`BE\000\200\273D\000\240\020E\000\000\232D\000@\356D\000`\300D\000\000\212D\000\000mD\000@\203D\000\200\307D\000@\335D\000\000\330D\000\210\013F\000\240\251E\000P\330E\000\200\267D\000\200\215D\000\300\245D\000\300ZE\000 2E\000\300\rD\000\000\255D\000\200kD\000@\016E\000\240\365D\000\350\225F\0000YE\000\300\312D\000\200\273D\0000\306E\000\300\234D\000\240*E\000 \027E\000\000\217D\000\000ZD\000\200\372D\000\300\232D\000@\203D\000\200\223D\000\240\200D\000 \341D\000`\205D\000\340\254D\000\200\216D\000\020BE\00000E\000\000\263D\000\000#E\000\200\327D\000\300ZE\000\200\247D\000@\335D\000\240\310D\000@\024E\000\230\206E\000`\261D\000\340\301D\000\200YE\000@\326D\000\000\270D\000\240\326D\000\000\372C\000\000HE\000`\'E\000\000\214D\000\300\210D\000`4E\000\000\014E\000\340\230D\000 \205E\000`\247D\000\300\025E\000`\202D\000@VD\000\200\216D\000\000vD\000\300\341D\000\320\027E\000\200\211D\000\000\205D\000\340\215E\000\000\243D\000`\230D\000\000\276D\000\000AD\000\260\033E\000\200\212D\000\000KE\000\000\233D\000`\337D\000PfE\000\220\005F\000\300\250D\000\200vD\000\340\310D\000\320\030E\000\000zD\000\300}D\000`QE\000\320;E\000\000\252D\000\200\220D\000\2404E\000@{E\000x\301E\000\000\327D\000 \222D\000 2E\000 KE\000\200\211D\000\000[D\000\000\374C\000@SD\000\200\002E\000\020ME\000\000\327D\000\000\264D\000\200\017E\000\200\355D\000@@D\000\200\261D\000\240\276D\000\300\231D\000`\301D\000\300(E\000\300\217D\000\240\014E\0000ME\000\200\206D\000\300+E\000\000\222D\000\000UD\000@SD\000\300\266D\000\340\302D\000\300iE\000\300\324D\000\200\320D\000\260mE\000PfE\000\000\237E\000`\225D\000\300jD\000\300\215D\000 \236E\000\000RD\000P\234E\000@WE\000\200\222D\000\300\\D\000\200;E\000\240\214D\000\000\301D\000\000\262D\000\200\360D\000\200\305D\000\000sD\000\200\204D\000\240%E\000\200\"E\000\000\202D\000\000\224D\000\300\336D\000\340\023E\000\200\237D\000\000aD\000\200zD\0000\231E\000\300\327D\000\240\366D\000\200\211D\000\000<E\000\300\311D\000\200\273D\000@\000E\000\240\"E\000@\014E\000\200\374D\000\300\177D\000`\001E\0000?E\000\020>E\000\000/D\000\000TE\000\300\236D\00001E\000\000/D\000\000\270D\000@RE\000\000\301D\000 KE\000\300\315D\000\340\340D\000\240\375D\000@VD\000\200\273D\000\360\024E\000P\005E\000\200\204D\000\240\264D\0000\021E\000\260\023E\000\300\341E\000\340\203D\000@\203E\000\340,E\000\300\257D\000\000/D\000\000pD\000 \371D\000 \351D\000\320lE\000\270\226E\000\200\343D\000\300\200D\000@\034E\000@UE\000\340\221D\000\240mE\000@^E\000`DE\000 \341D\000\000\177D\000\300\360D\000@\272D\000\200\355D\000\000|D\000\000@D\000@\216D\000\000\322D\000\200\204D\000\340{E\000 \376D\000\000\240D\000 \010E\000\320\tE\000\200TD\000\200\032E\000\000\026D\000\340\276D\000\000\334D\000\000\264D\000\000zD\000\200\273D\000@\234E\000`\025E\000@\'E\000\000\221D\000\200\016E\000 \235E\000\340\255D\000P\010E\000@\006D\000\000\334D\000@\333D\000 \rE\000@5E\000\340\304D\000@\324D\000@\241D\000 \347D\000\200\237D\000\240\014E\000\000\310E\000\000\214D\000\000\264D\000 \223D\000`\320D\000\300\226D\000\320\027E\000\200\346D\000\240\007E\000\000\227D\000\340\022E\000\000\204D\000\200\362D\000@\237D\000p\027E\000@,E\000\300\341D\000\000\310D\000\330\232E\000\000\240D\000@5E\000\000\245D\000\360SE\000\200;D\000\200\362D\000\020\000E\000\000\\D\000\240<E\000\000\240D\000\340\253D\000P\'E\000\360\\E\000\000&D\000@\227D\000peE\000\000)D\000\300\243D\000`\364D\000\360\033E\000@\022E\000\000\000@\000 GE\0004:F\000\200\361D\000\240%E\000`\351D\000\000\002E\000`3E\000\200\030E\000@\204D\000@\327E\000\200\362D\000\360*E\000@\272D\000\000\300D\000\240\264D\000@\275D\000\200\312D\000\000\306D\000\000\264D\000@\340D\000\000zD\000 \276D\000\200\331D\000 \246D\000\200\274D\000 2E\000X\227E\000\200uD\000\000\257D\000\000\226D\000\000/E\000\300\336D\000\200\037D\000\200\303D\000\200\375D\000@&E\000\200;F\000\200\004E\000\300BE\000 \340D\000`\205D\000\300dE\000h\251E\000 cE\000\000\377D\000 \227D\000 \371D\000P\250E\000\200cE\000\300dE\000\300)E\000\020&E\000\340\266D\000\000HD\000\360]E\000\000\\D\000\200\377C\000\300\325D\000\200\324D\000\000\250D\000\000\001E\000\240\007E\000\000WD\000\300PE\000@\203D\000\200\247D\000`YE\000\240\360D\000\200\312D\000\000\027E\000PRE\000@\227D\000\320ZE\000\000\221D\000 7E\000PAE\000\000hD\000@5D\000\320\204E\000\240\302D\000\200\tD\00000E\000\340\036E\000\2003D\000@\241D\000\300\371D\000\000ND\000\300\325D\000\200mD\000\020\004E\000\200\355D\000\340 E\000@\364D\000\000zD\000\000\257D\000P\'E\000`\020E\000`\nE\000\000tD\000\000\226D\000`#E\000\000\327D\000\300\226D\000\000FE\000@-D\000\240\241D\000@\302D\000\340aE\000`yE\000\0004D\000`\335D\000\300\032E\000\000*D\000\200\367C\000\000\227D\000\020jE\000 PE\000\354\243F\000\020[E\000\200\347D\000\000zF\000\300\250D\000@%E\000\300\017E\000`\037E\000\300}D\000`\255D\000\340\276D\000@\tE\000\320,E\000\000\256D\000\000\303D\000\240\345D\000\200TD\000@qD\000p\033E\000\000\217D\000@\001E\000\360UE\000@\233D\000\200\211D\000\240\355D\000\200\212D\000\300\256D\000\350\240E\000\340\207D\000 \217E\000\200\005E\000\000\253D\000@\034E\000\000uD\000\200YD\000 \200D\000\320*E\000\000\'E\000 \025E\000\000\316D\000P\005E\000\240\223D\000`\016E\000\000zD\000\300\264D\000\340\022E\000@\270D\000\300xD\0000\021E\000\240\205D\000\000\372D\000\000\003D\000\000\321D\000\240\346E\000\200\367C\000@\027D\000\000\026E\000\300EE\000\000\322D\000@\241D\000\000YD\000\020*E\000 4E\000\300\231D\000\200jD\000\000pE\000\300\344D\000 \231D\000\000(E\000\000zD\000\000\250D\000@\361D\000@]D\000@\234D\000\260\013E\000\000\226D\000\000HD\000@\203D\000\300UE\000`\370D\000\360\355E\000\340\260D\000`\006E\000\230\241E\000\200\035E\000\000\362D\000`\236D\000\300\261D\000\200mE\000@\326D\000\020>E\000@^D\000\200sD\000\000\320D\000\340]E\000\340\256D\000\200pD\000 \200D\000\260DE\000 \005E\000\300\360D\000\000zD\000\300\277D\000@aD\000\000zD\0004\027F\000\200\324D\000\340!E\000\300\221D\000\000\364D\000\000zE\000\000cD\000\340\252E\000\200\274D\000\200\315D\000\360\006E\000\010\305E\000\340\302D\000\300\356D\000\340\373D\000\200\263D\000\200\361C\000\000\204D\000\350\313E\000\000\341D\000\200OE\000\240 E\000\300\000D\000\0004D\000\220tE\000\300\236D\000@\016E\000p\021E\000\000\033E\000\000\003E\000@\022E\000\340\'E\000@\253D\000@2E\000\230\210E\000\000\241D\000\200\333D\000\240\014E\000\300tD\000\200\tE\000 \260D\000\200\237D\000\020KE\000 \345D\000`\363D\000\200\305D\000\340\rE\000\300\370D\000\240\245D\000\000\332D\000@\003E\000\200\034E\000\200;E\000\300\243D\000\200\331D\000\300\246D\000\240zE\000PKE\000@\036E\000@\200D\000\000\341E\000@\330D\000\000\264D\000\360>E\000\240\254D\000\200\312D\000\200\361C\000 \200D\000\230\212E\000@\336D\000\260\003E\000\360\004E\000\240\226D\000`\037E\000`\361D\000\200\rE\000 \233D\000\000\263D\000\240\016E\000\200\266D\000\200\220D\000\300\200D\000\000eD\000\000\001E\000\360\331E\000\000\330D\000 \245D\000\260.E\000\000jD\000\000\'E\000@\203D\000\000\007D\000\300xE\000\300\260D\000\300sE\000\300\017E\000@dD\000`\205D\000 \231D\000\340\236E\000\300\\E\000\000qE\000\214\030F\000\000aE\000\220IE\000\340\353D\000\300pD\000\000+D\000\240\266D\000\340\022E\000`\337D\000\000\214D\000 \257D\000\000\364D\000\200AE\000\000\365D\000P\016E\000\000\310D\00005E\000\200^E\000\000fD\000\240\030E\000\200\276E\000@\034F\000\200mD\000\000\302E\000\200\367D\000\000\201D\000`\020E\000\020\000E\000X\001F\000\000\205D\000`\262D\000@\002E\000\320\200E\000\000zD\000\300\363D\000`\213D\000\020\027E\000@\177D\000\240\333D\000\210\200E\000\354\013F\000`\260D\000@&D\0000QE\000\000\354D\000\300nD\000\340\017E\000d+F\000@\"D\000\200\025E\000\200|E\000`\345D\000\000\354D\000\200\004E\000\200\200D\000\000\333D\000\220\241E\000\000\316D\000\200\013E\000\200\234D\000\240\033E\000\260\001E\000\340{E\000\000\245D\000\200\273D\000\000zD\000\250\253E\0000\177E\000\200\252D\000\200\311C\000\000\177D\000@\371D\000p7E\000@~E\000\240\346D\000\000\204E\000\000\247D\000@\253D\000\200IE\000\000\302D\000P\004E\000`\326D\000@\'E\000\200`D\000\340\022E\000\300\362D\000\360 E\000`\261D\000pIE\000@\003E\000\000vD\000\240\244D\000\000HE\000`,E\000\2409F\000\200\223D\000\200\220D\000\300\376D\000 \200E\000\200\350D\000 \224D\000\300nD\000\000\014E\000\200\211D\000\340\rE\000\240\266D\000\000\353D\000@\236D\000\000-E\000\200\311D\000@\314D\000\240\222D\000\260\003E\000\240\002E\000\020yE\000\300\274D\000\200\351D\000\200\203D\000\304\006F\000\300\217D\000p;E\000\200[D\000\000\234D\000\000\370D\000`\201E\000\200]D\000\360\245E\000`\321D\000\000\245D\000\200\263D\0000\223E\000\000\264D\000\000\240D\000\300\235D\000\300~D\000\200oD\000`\031E\000\260\"E\000\000/D\000`\264D\000`\334D\000\000\266D\000\000\322C\000`\"E\000 \272D\000\200cE\000\000kE\000`\226D\0000\033E\000\000\220D\000\000\263D\000\200\242D\000\260\302E\000\300\242D\000\200\336D\000\300\205D\000\200\253D\000\300\364D\000\340\300E\000\300\217D\000\340\021E\000@\326D\000\020VE\000\300AE\000 #E\000@kE\000@2D\000@\305D\000\000\344D\000\340\276D\000\320tE\000\340\312D\000\000\007E\000\300\027E\000\020\275E\000\200\324D\000`\036E\000 \267D\000\240\224E\000\200\212D\000\000~E\000\000PD\000\240\013E\000\000pD\000\360FE\000\000\030E\000`\rE\000 \330D\000P\326E\000\220\000E\000`\301D\000\200OD\0000\277E\000\000\241D\000 \227E\000\200\223D\000\000\322D\000\0006E\000\340[E\000`\227D\000`#E\000\300AE\000 2E\000\320\'E\000\300#D\000@\361D\000 \373D\000;\215G\000\340\272D\000`\005E\000\000\252D\000@\362D\000\200\254D\000\000\341D\000\000\375D\000\200\'D\000\200\317D\000@\227D\000\300\337D\000\240\206D\000\340\321D\000\300\345D\000\240WE\000\200\023E\000\000\264D\000\200\376D\000 \307D\000\240\315D\000\240\304D\000\200\273D\000\000\014E\000\000pD\0000aE\000\240%E\000\000\250D\000\300\263E\000@\tD\000h\307E\000\360RE\000\200\257D\000\240\342D\000\030\272E\000\220XE\000 \223E\000\300\330D\000\000\005D\000\270\201E\000@\241D\000\340\"E\000\300\263D\000@\036E\000\000\303D\000\270\256E\000\240\'E\000\200\305E\000P\010E\000\200\355D\000 \003E\000 \310D\000\000CD\000\000\305D\000@\266D\000\200\324D\000\340\022E\000\200wD\000\340\334D\000\200\204D\000@\311D\000 \351D\000@\311D\000\320fE\000\000\262D\000\300dE\000@\034E\000`\014E\000@RD\000\340\263D\000\300(E\000\200\273D\000@\203D\000\340\366D\000\300#E\000\000\031D\000\240\207D\000\320-E\000p?E\000@,E\000\340\220D\000`\330D\000\340vE\000@\034F\000\240\250D\000`\233D\000\300\320D\000@\304D\000\300\327D\000\300\tE\000\300\031E\000 \200E\000\340\214D\000\200\305D\000\300\356D\000\0009D\000\020\330E\000 \000E\000\000KD\000@\265D\000\030\353E\000\300\257D\000\000\226D\000\000\276D\0000\230E\000`\327D\000@fD\000\000\226D\000\000\010E\000\000\026E\000 \210D\000\300=D\000\360\007E\000@\203D\000\240\224D\000\020\315E\000\200\355D\000\300?D\000\240kE\000@\203D\000\200\350D\000\300\274D\000\200\222D\000\200\214D\000 \322D\000\200\311D\000\000\250D\000p\007E\000\300\332E\000\200\334D\000 \317D\000\200\211D\000p\203E\000\340\232D\000\000[D\000\300\231D\000`\220D\000`\345D\000`\277D\000\000dE\000\200\361C\000`\nE\000@\177D\000\000\237D\000`\272D\000\240\203D\000\200\242E\000`\216D\000@\265D\000\000^D\000\200\361C\000 \206D\000\200\327C\000\000iD\000`\tE\000\200\nE\000\200\342C\000\300\316D\000\200;E\000\000eD\000\240\214F\000\200\355D\000\240JE\000`\341E\000\000\303E\000\300\017E\000@\034E\000\300GE\000\220*E\000\300\375D\000\260\007E\000`\265D\000\340HE\000T\304F\000\300\034E\000\370\201E\000\200\224D\000@\203E\000\300AE\000@\316D\000`\337D\000\200\354D\000\030\227F\000\200\313D\000\000\207D\000@\265D\000`\213D\000\200\355D\000\200\230D\000\230\340E\000\340\213E\000\000CE\000\330\006F\000@\222E\000\200;F\000P\006E\000\200\255D\000\200\232D\000@\336D\000\200\327D\000\300\215D\000`\347D\000\000\214D\000\200\315D\000\340\362D\000@\343D\000\340WE\000\000-E\000\200\226D\000\020\275E\000@cD\000\000\203D\000 \233D\000\300\310D\000\300\272D\000@\345D\000\240HE\000 \212D\000\000\350D\000\200\023E\000\000\372D\000\300HE\000\300\222D\000\000\006D\000@\200D\000\200bD\000\200\222D\000@\311D\000@wD\000\350\200E\000\000\237D\000\300\250D\000\000/F\000\240\327D\000\300sD\000\000BE\000\300\017E\000\000aD\000\210\264E\000\000\177D\000\000\245D\0000QE\000@=D\000\000\207D\000\300\333D\000@\303D\000\000\372D\000\240\245D\000\000\tE\000\340\247D\000`\231D\000\340\214E\000\000\327D\000p\177E\000\200\273D\000\200mD\000\340\301D\000\200\217D\000\200,E\000@KD\000\340\213E\000\200WE\000\020\023E\000\300\255E\000\200\225D\000\240\tE\000\300\236D\000\000\372D\000p\rE\000\000\323D\000 >E\000\236\230F\000\020)E\000 \364D\000\340\304E\000\020vE\000\200XD\000\200\265D\000\200\324D\000\3403E\000\200\243D\000\300\217D\000\300\363D\000 \334D\000`_E\000@DE\000\000\257D\000\240\361D\000\000\313D\000\340\316D\000\000\177D\000\300\213D\000\300\226D\000\000\\E\000\200\202D\000\300\353D\000\200\217D\000p{E\000\000\253D\000\000\312D\000\300\203D\0000\016E\000@\251D\000\000\202D\000\200pD\000\340\271D\000\014\014F\000\200\212D\000\230\230E\000@\022E\000 \223E\000\260\027E\000\200\tE\000@\260D\000\300\375D\000\000-D\000\000QE\000`\320D\000\200\367D\000P\271E\000@8E\000\300xD\000\360\021E\000\340\214D\000\200\347D\000\200\235D\000\2001E\000\340\022E\000\300\317D\000\000*E\000\200|D\000@\347D\000\000\232D\000`\205D\000\300\272D\0004=F\000@*E\000\000\365C\000@\234D\000\200\\D\000\300\314D\000@ND\000\000\341C\000 \237D\000\240\322E\000\240\315D\000\000\364D\000 \310D\000@NE\000x@F\000\320:E\000\3405E\000@\203D\000\260\263E\000\000HD\000\340\376D\000\320\230E\000\320;E\000\240.E\000 \270D\000\340\313D\000\240\272D\000\240\221D\000\210\246E\000\240`E\000(\252E\000DcF\000\300LD\000@\323D\000\0203E\000\300\217D\000\300\334D\000\000oD\000\200\273D\000\200\334D\000p\033E\000\200;E\000\200TE\000@\360D\000\240\252D\000\240\231D\000(\270E\000\260\021E\000\000\207D\000\000\216D\000\300\262D\000@\244D\000\000HD\000\000\214D\000\000\250D\000x\237E\000\200\211E\000@!D\000\340\003E\000\370hF\000\000\214D\000\200\234C\000\000XD\000@\203D\000\200\tD\000\0205E\000`\277D\000\000\356C\000H\226E\000\200\343D\000\200\214D\000@\265D\000@\331D\000\260.E\000 \360D\0000\246F\000\000/E\000\240\312D\000\200rE\000\200\247D\000@~D\000\000\230D\000\340\272E\000\300AE\000\240\372D\000\000kD\000\260\010E\000\000\335D\000\300\257D\000\200\242D\000\000\267D\000\240\007E\000\200\214D\000\200\216D\000\3402E\0000;E\000\220oE\000`\206E\000\000\257D\000\000\000@\000\000/E\000\340\214D\000@\253D\000\300\345D\000\000\300D\000\000HE\000X\234E\000\300\030D\000 \312D\000\300\235D\000\200\243D\000\2003D\000\340\351D\000 \200D\000\000\230D\000\200\376D\000\240\264D\000\000\033E\000\000\276D\000\020\211E\000\200\tD\000H\206E\000\200TD\000\240\272D\000\320\255E\000\000eD\000\360\233E\000\200\211E\000 \347D\000\0002D\000@\203D\000P\\E\000\220\034E\0000\203E\000`\013E\000 \221E\000\000\310D\000\360\000E\000\200~D\000\240\347D\000\200\377D\000\200\"E\000\200\242D\000\320OE\000`\234D\000\340\000E\000\000\341D\000\000\244D\000 \000E\000\300\200D\000\300\231D\000\000\242D\000(\225E\000\200\312D\000\000\350D\000 \017E\0000gE\000 \307D\000\200\211D\000@\304D\000\300\351D\000\340\251D\000\000\304D\000\300\237D\000`\236D\000\000\230D\000\340\222E"
      }
    }
  }
}
node {
  name: "SparseTensor/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1855
          }
          dim {
            size: 2
          }
        }
        tensor_contentt\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \004\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r
      }
    }
  }
}
node {
  name: "SparseTensor/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1855
          }
        }
        string_val: "95148"
        string_val: "94116"
        string_val: "94947"
        string_val: "94027"
        string_val: "95125"
        string_val: "94122"
        string_val: "94928"
        string_val: "94133"
        string_val: "95476"
        string_val: "94541"
        string_val: "94063"
        string_val: "94403"
        string_val: "94038"
        string_val: "95127"
        string_val: "94005"
        string_val: "94038"
        string_val: "94111"
        string_val: "94112"
        string_val: "94124"
        string_val: "95023"
        string_val: "94941"
        string_val: "94103"
        string_val: "94019"
        string_val: "95128"
        string_val: "94133"
        string_val: "97701"
        string_val: "94103"
        string_val: "95117"
        string_val: "95012"
        string_val: "95037"
        string_val: "95127"
        string_val: "94949"
        string_val: "95030"
        string_val: "94027"
        string_val: "94563"
        string_val: "94541"
        string_val: "95023"
        string_val: "95148"
        string_val: "94022"
        string_val: "94122"
        string_val: "94402"
        string_val: "94070"
        string_val: "94061"
        string_val: "94103"
        string_val: "94115"
        string_val: "95129"
        string_val: "95030"
        string_val: "95023"
        string_val: "94928"
        string_val: "94105"
        string_val: "94109"
        string_val: "94920"
        string_val: "94937"
        string_val: "94121"
        string_val: "94010"
        string_val: "94108"
        string_val: "95476"
        string_val: "94103"
        string_val: "95054"
        string_val: "94115"
        string_val: "94112"
        string_val: "94070"
        string_val: "94027"
        string_val: "94112"
        string_val: "95014"
        string_val: "94933"
        string_val: "94920"
        string_val: "94949"
        string_val: "94108"
        string_val: "95121"
        string_val: "95122"
        string_val: "95128"
        string_val: "95122"
        string_val: "21401"
        string_val: "94111"
        string_val: "94062"
        string_val: "94103"
        string_val: "95014"
        string_val: "94558"
        string_val: "95124"
        string_val: "94105"
        string_val: "94089"
        string_val: "94112"
        string_val: "94124"
        string_val: "94010"
        string_val: "94115"
        string_val: "94115"
        string_val: "94014"
        string_val: "95125"
        string_val: "94089"
        string_val: "94941"
        string_val: "94929"
        string_val: "94062"
        string_val: "95122"
        string_val: "95650"
        string_val: "95128"
        string_val: "95020"
        string_val: "94949"
        string_val: "94705"
        string_val: "95035"
        string_val: "94957"
        string_val: "95008"
        string_val: "95030"
        string_val: "94901"
        string_val: "95138"
        string_val: "97701"
        string_val: "95037"
        string_val: "94563"
        string_val: "94541"
        string_val: "94903"
        string_val: "94904"
        string_val: "94901"
        string_val: "94301"
        string_val: "95023"
        string_val: "94132"
        string_val: "94158"
        string_val: "94124"
        string_val: "94010"
        string_val: "95148"
        string_val: "94133"
        string_val: "94970"
        string_val: "95118"
        string_val: "94115"
        string_val: "94103"
        string_val: "95014"
        string_val: "94134"
        string_val: "95030"
        string_val: "94030"
        string_val: "95023"
        string_val: "94134"
        string_val: "94303"
        string_val: "95118"
        string_val: "94112"
        string_val: "94037"
        string_val: "94066"
        string_val: "94025"
        string_val: "94121"
        string_val: "94403"
        string_val: "95122"
        string_val: "95148"
        string_val: "46123"
        string_val: "94103"
        string_val: "94022"
        string_val: "94947"
        string_val: "94107"
        string_val: "94105"
        string_val: "95123"
        string_val: "94028"
        string_val: "95121"
        string_val: "94703"
        string_val: "95446"
        string_val: "89431"
        string_val: "94115"
        string_val: "95012"
        string_val: "95127"
        string_val: "94945"
        string_val: "95129"
        string_val: "90266"
        string_val: "95126"
        string_val: "95126"
        string_val: "95124"
        string_val: "94928"
        string_val: "94038"
        string_val: "94116"
        string_val: "94014"
        string_val: "94949"
        string_val: "94401"
        string_val: "94063"
        string_val: "94939"
        string_val: "94946"
        string_val: "94010"
        string_val: "94110"
        string_val: "94541"
        string_val: "94014"
        string_val: "94109"
        string_val: "94940"
        string_val: "95118"
        string_val: "95037"
        string_val: "94109"
        string_val: "94061"
        string_val: "95128"
        string_val: "94061"
        string_val: "95120"
        string_val: "21401"
        string_val: "95476"
        string_val: "94112"
        string_val: "95030"
        string_val: "94002"
        string_val: "95123"
        string_val: "94941"
        string_val: "94103"
        string_val: "94924"
        string_val: "94957"
        string_val: "94930"
        string_val: "94110"
        string_val: "95128"
        string_val: "94002"
        string_val: "95020"
        string_val: "95014"
        string_val: "94123"
        string_val: "94107"
        string_val: "95127"
        string_val: "94304"
        string_val: "95008"
        string_val: "95126"
        string_val: "94103"
        string_val: "94121"
        string_val: "94541"
        string_val: "95008"
        string_val: "95123"
        string_val: "94089"
        string_val: "94025"
        string_val: "94132"
        string_val: "21401"
        string_val: "94123"
        string_val: "94116"
        string_val: "94070"
        string_val: "94005"
        string_val: "95023"
        string_val: "94541"
        string_val: "94304"
        string_val: "90266"
        string_val: "94103"
        string_val: "95123"
        string_val: "95125"
        string_val: "94015"
        string_val: "94027"
        string_val: "95023"
        string_val: "89431"
        string_val: "94133"
        string_val: "94928"
        string_val: "94121"
        string_val: "95122"
        string_val: "94066"
        string_val: "94952"
        string_val: "95148"
        string_val: "94027"
        string_val: "94947"
        string_val: "95127"
        string_val: "94946"
        string_val: "95127"
        string_val: "94010"
        string_val: "21401"
        string_val: "95020"
        string_val: "94541"
        string_val: "94044"
        string_val: "94063"
        string_val: "94014"
        string_val: "94402"
        string_val: "94107"
        string_val: "95030"
        string_val: "94080"
        string_val: "94103"
        string_val: "94403"
        string_val: "94404"
        string_val: "94118"
        string_val: "95125"
        string_val: "94920"
        string_val: "94563"
        string_val: "94030"
        string_val: "94105"
        string_val: "94403"
        string_val: "94133"
        string_val: "95037"
        string_val: "95124"
        string_val: "94949"
        string_val: "94541"
        string_val: "94947"
        string_val: "94703"
        string_val: "95148"
        string_val: "94103"
        string_val: "94109"
        string_val: "94061"
        string_val: "94109"
        string_val: "95014"
        string_val: "94122"
        string_val: "95128"
        string_val: "94132"
        string_val: "95020"
        string_val: "94134"
        string_val: "95129"
        string_val: "95125"
        string_val: "95476"
        string_val: "94115"
        string_val: "94558"
        string_val: "94027"
        string_val: "94930"
        string_val: "94133"
        string_val: "94063"
        string_val: "94037"
        string_val: "94103"
        string_val: "94040"
        string_val: "94558"
        string_val: "94947"
        string_val: "95118"
        string_val: "97701"
        string_val: "95126"
        string_val: "95032"
        string_val: "95014"
        string_val: "95124"
        string_val: "94133"
        string_val: "95020"
        string_val: "95125"
        string_val: "94563"
        string_val: "95123"
        string_val: "94904"
        string_val: "94403"
        string_val: "89431"
        string_val: "94107"
        string_val: "94925"
        string_val: "94303"
        string_val: "94103"
        string_val: "94131"
        string_val: "94941"
        string_val: "94066"
        string_val: "95014"
        string_val: "95650"
        string_val: "94061"
        string_val: "94904"
        string_val: "94904"
        string_val: "95127"
        string_val: "95037"
        string_val: "94105"
        string_val: "94109"
        string_val: "94121"
        string_val: "94105"
        string_val: "94947"
        string_val: "94022"
        string_val: "95476"
        string_val: "94109"
        string_val: "94563"
        string_val: "95126"
        string_val: "90266"
        string_val: "94040"
        string_val: "94027"
        string_val: "94558"
        string_val: "94903"
        string_val: "94947"
        string_val: "95120"
        string_val: "94063"
        string_val: "95124"
        string_val: "94030"
        string_val: "21401"
        string_val: "94070"
        string_val: "95650"
        string_val: "95030"
        string_val: "97701"
        string_val: "21401"
        string_val: "94960"
        string_val: "95129"
        string_val: "94929"
        string_val: "94103"
        string_val: "95032"
        string_val: "95139"
        string_val: "94037"
        string_val: "94960"
        string_val: "94301"
        string_val: "94103"
        string_val: "95037"
        string_val: "94124"
        string_val: "95650"
        string_val: "94027"
        string_val: "94022"
        string_val: "94123"
        string_val: "94124"
        string_val: "94115"
        string_val: "94108"
        string_val: "94541"
        string_val: "95122"
        string_val: "94928"
        string_val: "94928"
        string_val: "94112"
        string_val: "94957"
        string_val: "21401"
        string_val: "94062"
        string_val: "21401"
        string_val: "94553"
        string_val: "94920"
        string_val: "94134"
        string_val: "89431"
        string_val: "95118"
        string_val: "46123"
        string_val: "94028"
        string_val: "95014"
        string_val: "94116"
        string_val: "94933"
        string_val: "94070"
        string_val: "94123"
        string_val: "94010"
        string_val: "94109"
        string_val: "94133"
        string_val: "94107"
        string_val: "94553"
        string_val: "94060"
        string_val: "94925"
        string_val: "94123"
        string_val: "94014"
        string_val: "94115"
        string_val: "94116"
        string_val: "95035"
        string_val: "95650"
        string_val: "95127"
        string_val: "95012"
        string_val: "94402"
        string_val: "94949"
        string_val: "94121"
        string_val: "95120"
        string_val: "94020"
        string_val: "95125"
        string_val: "94105"
        string_val: "94949"
        string_val: "95123"
        string_val: "97701"
        string_val: "94403"
        string_val: "94901"
        string_val: "94127"
        string_val: "94947"
        string_val: "94015"
        string_val: "94110"
        string_val: "94108"
        string_val: "94404"
        string_val: "94941"
        string_val: "95032"
        string_val: "94108"
        string_val: "95127"
        string_val: "94062"
        string_val: "94541"
        string_val: "94114"
        string_val: "94110"
        string_val: "94062"
        string_val: "95122"
        string_val: "94112"
        string_val: "94040"
        string_val: "95119"
        string_val: "94102"
        string_val: "94105"
        string_val: "21401"
        string_val: "94928"
        string_val: "21401"
        string_val: "94903"
        string_val: "94920"
        string_val: "90266"
        string_val: "95446"
        string_val: "95124"
        string_val: "94105"
        string_val: "46123"
        string_val: "94123"
        string_val: "95121"
        string_val: "95020"
        string_val: "94105"
        string_val: "95123"
        string_val: "95148"
        string_val: "94945"
        string_val: "94103"
        string_val: "94937"
        string_val: "94043"
        string_val: "95008"
        string_val: "94070"
        string_val: "95650"
        string_val: "94404"
        string_val: "94043"
        string_val: "95127"
        string_val: "94132"
        string_val: "94112"
        string_val: "94402"
        string_val: "94928"
        string_val: "94110"
        string_val: "95012"
        string_val: "94105"
        string_val: "94025"
        string_val: "94947"
        string_val: "94118"
        string_val: "94114"
        string_val: "94025"
        string_val: "94134"
        string_val: "95008"
        string_val: "95012"
        string_val: "94952"
        string_val: "94043"
        string_val: "94920"
        string_val: "94070"
        string_val: "94920"
        string_val: "94062"
        string_val: "94110"
        string_val: "94115"
        string_val: "94062"
        string_val: "94010"
        string_val: "94062"
        string_val: "95125"
        string_val: "95020"
        string_val: "94010"
        string_val: "94134"
        string_val: "94133"
        string_val: "94107"
        string_val: "90266"
        string_val: "94947"
        string_val: "94928"
        string_val: "94066"
        string_val: "94089"
        string_val: "94110"
        string_val: "94131"
        string_val: "95128"
        string_val: "46123"
        string_val: "94553"
        string_val: "94563"
        string_val: "94061"
        string_val: "94103"
        string_val: "94025"
        string_val: "95476"
        string_val: "94131"
        string_val: "94109"
        string_val: "94044"
        string_val: "94070"
        string_val: "94062"
        string_val: "94928"
        string_val: "95120"
        string_val: "95117"
        string_val: "94061"
        string_val: "94002"
        string_val: "94960"
        string_val: "95127"
        string_val: "94928"
        string_val: "94063"
        string_val: "97701"
        string_val: "94941"
        string_val: "94002"
        string_val: "94109"
        string_val: "97701"
        string_val: "94014"
        string_val: "94118"
        string_val: "94010"
        string_val: "94133"
        string_val: "94022"
        string_val: "95008"
        string_val: "94947"
        string_val: "94930"
        string_val: "94945"
        string_val: "95023"
        string_val: "94109"
        string_val: "94928"
        string_val: "94112"
        string_val: "95120"
        string_val: "95124"
        string_val: "94131"
        string_val: "94110"
        string_val: "94941"
        string_val: "94602"
        string_val: "90266"
        string_val: "95129"
        string_val: "94904"
        string_val: "94041"
        string_val: "94404"
        string_val: "94134"
        string_val: "94903"
        string_val: "94089"
        string_val: "95129"
        string_val: "94402"
        string_val: "94015"
        string_val: "94110"
        string_val: "89431"
        string_val: "95128"
        string_val: "94015"
        string_val: "94134"
        string_val: "94553"
        string_val: "95014"
        string_val: "94037"
        string_val: "94602"
        string_val: "94115"
        string_val: "94303"
        string_val: "95032"
        string_val: "95124"
        string_val: "94114"
        string_val: "94022"
        string_val: "95037"
        string_val: "95650"
        string_val: "94027"
        string_val: "94105"
        string_val: "94303"
        string_val: "94903"
        string_val: "94102"
        string_val: "94402"
        string_val: "94133"
        string_val: "97701"
        string_val: "94109"
        string_val: "95037"
        string_val: "94107"
        string_val: "95135"
        string_val: "21401"
        string_val: "95650"
        string_val: "94558"
        string_val: "94102"
        string_val: "94109"
        string_val: "94401"
        string_val: "94123"
        string_val: "94123"
        string_val: "95023"
        string_val: "94403"
        string_val: "95127"
        string_val: "94028"
        string_val: "94134"
        string_val: "95128"
        string_val: "94132"
        string_val: "94401"
        string_val: "94941"
        string_val: "94553"
        string_val: "95023"
        string_val: "94132"
        string_val: "95118"
        string_val: "95650"
        string_val: "94903"
        string_val: "95122"
        string_val: "95117"
        string_val: "94541"
        string_val: "94960"
        string_val: "94044"
        string_val: "95650"
        string_val: "94127"
        string_val: "94103"
        string_val: "46123"
        string_val: "94110"
        string_val: "94015"
        string_val: "94705"
        string_val: "94024"
        string_val: "94041"
        string_val: "95124"
        string_val: "94025"
        string_val: "94122"
        string_val: "94041"
        string_val: "94105"
        string_val: "94063"
        string_val: "94110"
        string_val: "97701"
        string_val: "97701"
        string_val: "94116"
        string_val: "95476"
        string_val: "94112"
        string_val: "94015"
        string_val: "94703"
        string_val: "94920"
        string_val: "95123"
        string_val: "94123"
        string_val: "94960"
        string_val: "95126"
        string_val: "94038"
        string_val: "94019"
        string_val: "94005"
        string_val: "95032"
        string_val: "94903"
        string_val: "94930"
        string_val: "94105"
        string_val: "94109"
        string_val: "94903"
        string_val: "95023"
        string_val: "46123"
        string_val: "94131"
        string_val: "89431"
        string_val: "95032"
        string_val: "94901"
        string_val: "94025"
        string_val: "94952"
        string_val: "94107"
        string_val: "95128"
        string_val: "94010"
        string_val: "95117"
        string_val: "94038"
        string_val: "94705"
        string_val: "94089"
        string_val: "94109"
        string_val: "94541"
        string_val: "95128"
        string_val: "95129"
        string_val: "46123"
        string_val: "94929"
        string_val: "94904"
        string_val: "89431"
        string_val: "95118"
        string_val: "94402"
        string_val: "95023"
        string_val: "95122"
        string_val: "95032"
        string_val: "94109"
        string_val: "95032"
        string_val: "95118"
        string_val: "94105"
        string_val: "95123"
        string_val: "94123"
        string_val: "94553"
        string_val: "95023"
        string_val: "94134"
        string_val: "95020"
        string_val: "95118"
        string_val: "94070"
        string_val: "94901"
        string_val: "95125"
        string_val: "95120"
        string_val: "95117"
        string_val: "94124"
        string_val: "94041"
        string_val: "94563"
        string_val: "94901"
        string_val: "94028"
        string_val: "94114"
        string_val: "94541"
        string_val: "94110"
        string_val: "94112"
        string_val: "94970"
        string_val: "94563"
        string_val: "94022"
        string_val: "95023"
        string_val: "95121"
        string_val: "95148"
        string_val: "94117"
        string_val: "94103"
        string_val: "94089"
        string_val: "94558"
        string_val: "94949"
        string_val: "94015"
        string_val: "94022"
        string_val: "95008"
        string_val: "94114"
        string_val: "94062"
        string_val: "94124"
        string_val: "94941"
        string_val: "94122"
        string_val: "95121"
        string_val: "94107"
        string_val: "94015"
        string_val: "94104"
        string_val: "94131"
        string_val: "94010"
        string_val: "94062"
        string_val: "94403"
        string_val: "95476"
        string_val: "94112"
        string_val: "95037"
        string_val: "94901"
        string_val: "95124"
        string_val: "94563"
        string_val: "94952"
        string_val: "94949"
        string_val: "94019"
        string_val: "89431"
        string_val: "94015"
        string_val: "94020"
        string_val: "94602"
        string_val: "95032"
        string_val: "95020"
        string_val: "94089"
        string_val: "95118"
        string_val: "94062"
        string_val: "94041"
        string_val: "95037"
        string_val: "94703"
        string_val: "97701"
        string_val: "94553"
        string_val: "94066"
        string_val: "94109"
        string_val: "94541"
        string_val: "94002"
        string_val: "95128"
        string_val: "94074"
        string_val: "94960"
        string_val: "94952"
        string_val: "94015"
        string_val: "90266"
        string_val: "94041"
        string_val: "94952"
        string_val: "94947"
        string_val: "94063"
        string_val: "95119"
        string_val: "94303"
        string_val: "94019"
        string_val: "95120"
        string_val: "94947"
        string_val: "94121"
        string_val: "94121"
        string_val: "94124"
        string_val: "94070"
        string_val: "97701"
        string_val: "94553"
        string_val: "94080"
        string_val: "94022"
        string_val: "95134"
        string_val: "94066"
        string_val: "95121"
        string_val: "94112"
        string_val: "94952"
        string_val: "94133"
        string_val: "94025"
        string_val: "94010"
        string_val: "94070"
        string_val: "94030"
        string_val: "94122"
        string_val: "94703"
        string_val: "95148"
        string_val: "95118"
        string_val: "94952"
        string_val: "94952"
        string_val: "94115"
        string_val: "94303"
        string_val: "94044"
        string_val: "94060"
        string_val: "94602"
        string_val: "94110"
        string_val: "94109"
        string_val: "94949"
        string_val: "94901"
        string_val: "94107"
        string_val: "95020"
        string_val: "94901"
        string_val: "95125"
        string_val: "95650"
        string_val: "94929"
        string_val: "94123"
        string_val: "95121"
        string_val: "94563"
        string_val: "95035"
        string_val: "94025"
        string_val: "94109"
        string_val: "94402"
        string_val: "95014"
        string_val: "94301"
        string_val: "46123"
        string_val: "90266"
        string_val: "94947"
        string_val: "97701"
        string_val: "94116"
        string_val: "94010"
        string_val: "94025"
        string_val: "94080"
        string_val: "94040"
        string_val: "95125"
        string_val: "94061"
        string_val: "94402"
        string_val: "95135"
        string_val: "95117"
        string_val: "94558"
        string_val: "94952"
        string_val: "94903"
        string_val: "95476"
        string_val: "95125"
        string_val: "95020"
        string_val: "95121"
        string_val: "94945"
        string_val: "95128"
        string_val: "95122"
        string_val: "95125"
        string_val: "94123"
        string_val: "94114"
        string_val: "94102"
        string_val: "94952"
        string_val: "94107"
        string_val: "94010"
        string_val: "94109"
        string_val: "94103"
        string_val: "94089"
        string_val: "95020"
        string_val: "94065"
        string_val: "94024"
        string_val: "95117"
        string_val: "94041"
        string_val: "94070"
        string_val: "94109"
        string_val: "95126"
        string_val: "94705"
        string_val: "94949"
        string_val: "94080"
        string_val: "94158"
        string_val: "94104"
        string_val: "94118"
        string_val: "94108"
        string_val: "94949"
        string_val: "95032"
        string_val: "95125"
        string_val: "94960"
        string_val: "94401"
        string_val: "94131"
        string_val: "94401"
        string_val: "94108"
        string_val: "94123"
        string_val: "94030"
        string_val: "94947"
        string_val: "95650"
        string_val: "94901"
        string_val: "94061"
        string_val: "94112"
        string_val: "94104"
        string_val: "94114"
        string_val: "94903"
        string_val: "94043"
        string_val: "97701"
        string_val: "94061"
        string_val: "94304"
        string_val: "95014"
        string_val: "94114"
        string_val: "94015"
        string_val: "94110"
        string_val: "94904"
        string_val: "94109"
        string_val: "94002"
        string_val: "94019"
        string_val: "94112"
        string_val: "94109"
        string_val: "95020"
        string_val: "95650"
        string_val: "94109"
        string_val: "94114"
        string_val: "46123"
        string_val: "95126"
        string_val: "94089"
        string_val: "94037"
        string_val: "95148"
        string_val: "94061"
        string_val: "94301"
        string_val: "95446"
        string_val: "95127"
        string_val: "94558"
        string_val: "94901"
        string_val: "94014"
        string_val: "95120"
        string_val: "95035"
        string_val: "95122"
        string_val: "94563"
        string_val: "94403"
        string_val: "94040"
        string_val: "94952"
        string_val: "94401"
        string_val: "95119"
        string_val: "94941"
        string_val: "94901"
        string_val: "94133"
        string_val: "94038"
        string_val: "95037"
        string_val: "95020"
        string_val: "94066"
        string_val: "94015"
        string_val: "94928"
        string_val: "95020"
        string_val: "46123"
        string_val: "94022"
        string_val: "94952"
        string_val: "94103"
        string_val: "94123"
        string_val: "94019"
        string_val: "95127"
        string_val: "94020"
        string_val: "94116"
        string_val: "94111"
        string_val: "94107"
        string_val: "95035"
        string_val: "95035"
        string_val: "90266"
        string_val: "89431"
        string_val: "94952"
        string_val: "94116"
        string_val: "94066"
        string_val: "94952"
        string_val: "94705"
        string_val: "95119"
        string_val: "94014"
        string_val: "94901"
        string_val: "95008"
        string_val: "94063"
        string_val: "94970"
        string_val: "95035"
        string_val: "21401"
        string_val: "94022"
        string_val: "94404"
        string_val: "94062"
        string_val: "21401"
        string_val: "94105"
        string_val: "94941"
        string_val: "95012"
        string_val: "95476"
        string_val: "94110"
        string_val: "95120"
        string_val: "94946"
        string_val: "95123"
        string_val: "94105"
        string_val: "94132"
        string_val: "94040"
        string_val: "95120"
        string_val: "94103"
        string_val: "95023"
        string_val: "95008"
        string_val: "95121"
        string_val: "95035"
        string_val: "94107"
        string_val: "94928"
        string_val: "94123"
        string_val: "94903"
        string_val: "94131"
        string_val: "94010"
        string_val: "94103"
        string_val: "94105"
        string_val: "94063"
        string_val: "94133"
        string_val: "95002"
        string_val: "94952"
        string_val: "94107"
        string_val: "94108"
        string_val: "97701"
        string_val: "94404"
        string_val: "94123"
        string_val: "94108"
        string_val: "94904"
        string_val: "95128"
        string_val: "94903"
        string_val: "94089"
        string_val: "95446"
        string_val: "95126"
        string_val: "94112"
        string_val: "95008"
        string_val: "94037"
        string_val: "94044"
        string_val: "94124"
        string_val: "94063"
        string_val: "95037"
        string_val: "94960"
        string_val: "94022"
        string_val: "95128"
        string_val: "94025"
        string_val: "94558"
        string_val: "94402"
        string_val: "94960"
        string_val: "95008"
        string_val: "94973"
        string_val: "94105"
        string_val: "94122"
        string_val: "95148"
        string_val: "94403"
        string_val: "89431"
        string_val: "95123"
        string_val: "94037"
        string_val: "95123"
        string_val: "94107"
        string_val: "94107"
        string_val: "94952"
        string_val: "94019"
        string_val: "95123"
        string_val: "94133"
        string_val: "94115"
        string_val: "94703"
        string_val: "94089"
        string_val: "94024"
        string_val: "94103"
        string_val: "95020"
        string_val: "94103"
        string_val: "94945"
        string_val: "94102"
        string_val: "95020"
        string_val: "90266"
        string_val: "94038"
        string_val: "95124"
        string_val: "94105"
        string_val: "94109"
        string_val: "94103"
        string_val: "94402"
        string_val: "95122"
        string_val: "94134"
        string_val: "94015"
        string_val: "95128"
        string_val: "94110"
        string_val: "94070"
        string_val: "95030"
        string_val: "94019"
        string_val: "94019"
        string_val: "94904"
        string_val: "94952"
        string_val: "94065"
        string_val: "94116"
        string_val: "95037"
        string_val: "94112"
        string_val: "95650"
        string_val: "94019"
        string_val: "94131"
        string_val: "95124"
        string_val: "94941"
        string_val: "94114"
        string_val: "95148"
        string_val: "94558"
        string_val: "94301"
        string_val: "94107"
        string_val: "94019"
        string_val: "90266"
        string_val: "94115"
        string_val: "94941"
        string_val: "95119"
        string_val: "94960"
        string_val: "94089"
        string_val: "94038"
        string_val: "21401"
        string_val: "94114"
        string_val: "95446"
        string_val: "46123"
        string_val: "97701"
        string_val: "95008"
        string_val: "94061"
        string_val: "94089"
        string_val: "94105"
        string_val: "94028"
        string_val: "94109"
        string_val: "94563"
        string_val: "94541"
        string_val: "94947"
        string_val: "94066"
        string_val: "46123"
        string_val: "94563"
        string_val: "94901"
        string_val: "94019"
        string_val: "94015"
        string_val: "94089"
        string_val: "95032"
        string_val: "94563"
        string_val: "94602"
        string_val: "95126"
        string_val: "94553"
        string_val: "95023"
        string_val: "95148"
        string_val: "94404"
        string_val: "94105"
        string_val: "95129"
        string_val: "94121"
        string_val: "94127"
        string_val: "95123"
        string_val: "94303"
        string_val: "94107"
        string_val: "95032"
        string_val: "94115"
        string_val: "94089"
        string_val: "94903"
        string_val: "94904"
        string_val: "94971"
        string_val: "94941"
        string_val: "94109"
        string_val: "94109"
        string_val: "95032"
        string_val: "94043"
        string_val: "94133"
        string_val: "90266"
        string_val: "94105"
        string_val: "94109"
        string_val: "95128"
        string_val: "21401"
        string_val: "94920"
        string_val: "95128"
        string_val: "94037"
        string_val: "94134"
        string_val: "95476"
        string_val: "95148"
        string_val: "94102"
        string_val: "94114"
        string_val: "94066"
        string_val: "94118"
        string_val: "94558"
        string_val: "95122"
        string_val: "94105"
        string_val: "94703"
        string_val: "95125"
        string_val: "94118"
        string_val: "94947"
        string_val: "94941"
        string_val: "95125"
        string_val: "95032"
        string_val: "94928"
        string_val: "94014"
        string_val: "46123"
        string_val: "94920"
        string_val: "94080"
        string_val: "95020"
        string_val: "94040"
        string_val: "94602"
        string_val: "94019"
        string_val: "94960"
        string_val: "94970"
        string_val: "94043"
        string_val: "95120"
        string_val: "97701"
        string_val: "95476"
        string_val: "94044"
        string_val: "94401"
        string_val: "94019"
        string_val: "95128"
        string_val: "94107"
        string_val: "95121"
        string_val: "46123"
        string_val: "94024"
        string_val: "95014"
        string_val: "94105"
        string_val: "94941"
        string_val: "94105"
        string_val: "95127"
        string_val: "95030"
        string_val: "94062"
        string_val: "94108"
        string_val: "94920"
        string_val: "95020"
        string_val: "94945"
        string_val: "94563"
        string_val: "94061"
        string_val: "94103"
        string_val: "94110"
        string_val: "94920"
        string_val: "94105"
        string_val: "94122"
        string_val: "21401"
        string_val: "94303"
        string_val: "95127"
        string_val: "95650"
        string_val: "94960"
        string_val: "94404"
        string_val: "94303"
        string_val: "94110"
        string_val: "94010"
        string_val: "95008"
        string_val: "94103"
        string_val: "94134"
        string_val: "95035"
        string_val: "95032"
        string_val: "94303"
        string_val: "90266"
        string_val: "90266"
        string_val: "95020"
        string_val: "94133"
        string_val: "95125"
        string_val: "46123"
        string_val: "94928"
        string_val: "95030"
        string_val: "94930"
        string_val: "89431"
        string_val: "94070"
        string_val: "46123"
        string_val: "94116"
        string_val: "94063"
        string_val: "94563"
        string_val: "95650"
        string_val: "95118"
        string_val: "94401"
        string_val: "94080"
        string_val: "95121"
        string_val: "94010"
        string_val: "94019"
        string_val: "95123"
        string_val: "94952"
        string_val: "94939"
        string_val: "95124"
        string_val: "95128"
        string_val: "94010"
        string_val: "94404"
        string_val: "94110"
        string_val: "94061"
        string_val: "94117"
        string_val: "97701"
        string_val: "94945"
        string_val: "94928"
        string_val: "94945"
        string_val: "95125"
        string_val: "94030"
        string_val: "95023"
        string_val: "94404"
        string_val: "94024"
        string_val: "94065"
        string_val: "94402"
        string_val: "95128"
        string_val: "94022"
        string_val: "94945"
        string_val: "94949"
        string_val: "94123"
        string_val: "94089"
        string_val: "95124"
        string_val: "94019"
        string_val: "95476"
        string_val: "94133"
        string_val: "94134"
        string_val: "94104"
        string_val: "95127"
        string_val: "94025"
        string_val: "94038"
        string_val: "94103"
        string_val: "94960"
        string_val: "94105"
        string_val: "95446"
        string_val: "94108"
        string_val: "95124"
        string_val: "94133"
        string_val: "95012"
        string_val: "94541"
        string_val: "94703"
        string_val: "94103"
        string_val: "94930"
        string_val: "95123"
        string_val: "94108"
        string_val: "94027"
        string_val: "94558"
        string_val: "95124"
        string_val: "94401"
        string_val: "95008"
        string_val: "94044"
        string_val: "94924"
        string_val: "94105"
        string_val: "94404"
        string_val: "94015"
        string_val: "94104"
        string_val: "94558"
        string_val: "94122"
        string_val: "94903"
        string_val: "95120"
        string_val: "94105"
        string_val: "94121"
        string_val: "94903"
        string_val: "95020"
        string_val: "95030"
        string_val: "94133"
        string_val: "94104"
        string_val: "94703"
        string_val: "94930"
        string_val: "94952"
        string_val: "46123"
        string_val: "94115"
        string_val: "97701"
        string_val: "95032"
        string_val: "95124"
        string_val: "89431"
        string_val: "94043"
        string_val: "94118"
        string_val: "95126"
        string_val: "94116"
        string_val: "94043"
        string_val: "95037"
        string_val: "95122"
        string_val: "95476"
        string_val: "95148"
        string_val: "95650"
        string_val: "94947"
        string_val: "94920"
        string_val: "94131"
        string_val: "95119"
        string_val: "94105"
        string_val: "94920"
        string_val: "95023"
        string_val: "90266"
        string_val: "94070"
        string_val: "94080"
        string_val: "94949"
        string_val: "94563"
        string_val: "94107"
        string_val: "97701"
        string_val: "94127"
        string_val: "94904"
        string_val: "94105"
        string_val: "94103"
        string_val: "94933"
        string_val: "95123"
        string_val: "94043"
        string_val: "94112"
        string_val: "94558"
        string_val: "94019"
        string_val: "90266"
        string_val: "94014"
        string_val: "94070"
        string_val: "95023"
        string_val: "94124"
        string_val: "94061"
        string_val: "94015"
        string_val: "94066"
        string_val: "94901"
        string_val: "94105"
        string_val: "95650"
        string_val: "94110"
        string_val: "94402"
        string_val: "94089"
        string_val: "94107"
        string_val: "97701"
        string_val: "94558"
        string_val: "95118"
        string_val: "94960"
        string_val: "94404"
        string_val: "94061"
        string_val: "94122"
        string_val: "94904"
        string_val: "94903"
        string_val: "94563"
        string_val: "94124"
        string_val: "90266"
        string_val: "94118"
        string_val: "95122"
        string_val: "94132"
        string_val: "94941"
        string_val: "94920"
        string_val: "94945"
        string_val: "94041"
        string_val: "94956"
        string_val: "94121"
        string_val: "94403"
        string_val: "95037"
        string_val: "94002"
        string_val: "94110"
        string_val: "94080"
        string_val: "94901"
        string_val: "94952"
        string_val: "94904"
        string_val: "95119"
        string_val: "94028"
        string_val: "94065"
        string_val: "95135"
        string_val: "94062"
        string_val: "95037"
        string_val: "94303"
        string_val: "94115"
        string_val: "95121"
        string_val: "94947"
        string_val: "94133"
        string_val: "94105"
        string_val: "94941"
        string_val: "94901"
        string_val: "94080"
        string_val: "94110"
        string_val: "95650"
        string_val: "94062"
        string_val: "94020"
        string_val: "94949"
        string_val: "90266"
        string_val: "95123"
        string_val: "94133"
        string_val: "94960"
        string_val: "95032"
        string_val: "95124"
        string_val: "94563"
        string_val: "94080"
        string_val: "94123"
        string_val: "94116"
        string_val: "95127"
        string_val: "90266"
        string_val: "95126"
        string_val: "94043"
        string_val: "21401"
        string_val: "94062"
        string_val: "94404"
        string_val: "94108"
        string_val: "94134"
        string_val: "94404"
        string_val: "94553"
        string_val: "95476"
        string_val: "94062"
        string_val: "94010"
        string_val: "94107"
        string_val: "94089"
        string_val: "95014"
        string_val: "94060"
        string_val: "94061"
        string_val: "94061"
        string_val: "94114"
        string_val: "94901"
        string_val: "94109"
        string_val: "89431"
        string_val: "94403"
        string_val: "94065"
        string_val: "46123"
        string_val: "95650"
        string_val: "94904"
        string_val: "89431"
        string_val: "95124"
        string_val: "94904"
        string_val: "94602"
        string_val: "94105"
        string_val: "95120"
        string_val: "94037"
        string_val: "95118"
        string_val: "94920"
        string_val: "94010"
        string_val: "95128"
        string_val: "94105"
        string_val: "94115"
        string_val: "94403"
        string_val: "94080"
        string_val: "94063"
        string_val: "94553"
        string_val: "95128"
        string_val: "94945"
        string_val: "95012"
        string_val: "94558"
        string_val: "94558"
        string_val: "94133"
        string_val: "95126"
        string_val: "94103"
        string_val: "94133"
        string_val: "94118"
        string_val: "95122"
        string_val: "94107"
        string_val: "95120"
        string_val: "95125"
        string_val: "95123"
        string_val: "94019"
        string_val: "94015"
        string_val: "21401"
        string_val: "94928"
        string_val: "95008"
        string_val: "94945"
        string_val: "94043"
        string_val: "94121"
        string_val: "94109"
        string_val: "94044"
        string_val: "94553"
        string_val: "94015"
        string_val: "94124"
        string_val: "94103"
        string_val: "89431"
        string_val: "94131"
        string_val: "95120"
        string_val: "94103"
        string_val: "94107"
        string_val: "94037"
        string_val: "95127"
        string_val: "94030"
        string_val: "94127"
        string_val: "94952"
        string_val: "94563"
        string_val: "94010"
        string_val: "94019"
        string_val: "94114"
        string_val: "94301"
        string_val: "95650"
        string_val: "94404"
        string_val: "94121"
        string_val: "95120"
        string_val: "94105"
        string_val: "94102"
        string_val: "21401"
        string_val: "95030"
        string_val: "94928"
        string_val: "94705"
        string_val: "95120"
        string_val: "94065"
        string_val: "97701"
        string_val: "94089"
        string_val: "94131"
        string_val: "94402"
        string_val: "94044"
        string_val: "94112"
        string_val: "94080"
        string_val: "95125"
        string_val: "94025"
        string_val: "95030"
        string_val: "94115"
        string_val: "95650"
        string_val: "94028"
        string_val: "94941"
        string_val: "94062"
        string_val: "95126"
        string_val: "94941"
        string_val: "95476"
        string_val: "89431"
        string_val: "94945"
        string_val: "94030"
        string_val: "95008"
        string_val: "94401"
        string_val: "95124"
        string_val: "95118"
        string_val: "95476"
        string_val: "94123"
        string_val: "95126"
        string_val: "95121"
        string_val: "94920"
        string_val: "94553"
        string_val: "94904"
        string_val: "94105"
        string_val: "94109"
        string_val: "94044"
        string_val: "95037"
        string_val: "94025"
        string_val: "94080"
        string_val: "95035"
        string_val: "94025"
        string_val: "95121"
        string_val: "94903"
        string_val: "94043"
        string_val: "94952"
        string_val: "94061"
        string_val: "94303"
        string_val: "94111"
        string_val: "94404"
        string_val: "94109"
        string_val: "94563"
        string_val: "94124"
        string_val: "94014"
        string_val: "94920"
        string_val: "94553"
        string_val: "95126"
        string_val: "95037"
        string_val: "46123"
        string_val: "94110"
        string_val: "95476"
        string_val: "95122"
        string_val: "46123"
        string_val: "95032"
        string_val: "94131"
        string_val: "94061"
        string_val: "95128"
        string_val: "95117"
        string_val: "94080"
        string_val: "94401"
        string_val: "94403"
        string_val: "95008"
        string_val: "94558"
        string_val: "46123"
        string_val: "94602"
        string_val: "94110"
        string_val: "94960"
        string_val: "94122"
        string_val: "95124"
        string_val: "95446"
        string_val: "95120"
        string_val: "94015"
        string_val: "94107"
        string_val: "90266"
        string_val: "94131"
        string_val: "94920"
        string_val: "89431"
        string_val: "94928"
        string_val: "94019"
        string_val: "21401"
        string_val: "95476"
        string_val: "94970"
        string_val: "94920"
        string_val: "94133"
        string_val: "94025"
        string_val: "94110"
        string_val: "94027"
        string_val: "95030"
        string_val: "90266"
        string_val: "94114"
        string_val: "94115"
        string_val: "94703"
        string_val: "95119"
        string_val: "94124"
        string_val: "94107"
        string_val: "94901"
        string_val: "95020"
        string_val: "94010"
        string_val: "94002"
        string_val: "95123"
        string_val: "95476"
        string_val: "95139"
        string_val: "94066"
        string_val: "94553"
        string_val: "95127"
        string_val: "94025"
        string_val: "94924"
        string_val: "94904"
        string_val: "94602"
        string_val: "94118"
        string_val: "94116"
        string_val: "94903"
        string_val: "94403"
        string_val: "94014"
        string_val: "94301"
        string_val: "95122"
        string_val: "94107"
        string_val: "95148"
        string_val: "90266"
        string_val: "95054"
        string_val: "94960"
        string_val: "94947"
        string_val: "95020"
        string_val: "94903"
        string_val: "94901"
        string_val: "94303"
        string_val: "94070"
        string_val: "94403"
        string_val: "95120"
        string_val: "94945"
        string_val: "94038"
        string_val: "94062"
        string_val: "95127"
        string_val: "94030"
        string_val: "95125"
        string_val: "95126"
        string_val: "95123"
        string_val: "94903"
        string_val: "94541"
        string_val: "94025"
        string_val: "95123"
        string_val: "94019"
        string_val: "94303"
        string_val: "94062"
        string_val: "95012"
        string_val: "94109"
        string_val: "95032"
        string_val: "95030"
        string_val: "94024"
        string_val: "94066"
        string_val: "94903"
        string_val: "89431"
        string_val: "95125"
        string_val: "89431"
        string_val: "94109"
        string_val: "94104"
        string_val: "94122"
        string_val: "95030"
        string_val: "94937"
        string_val: "95023"
        string_val: "94904"
        string_val: "94121"
        string_val: "95125"
        string_val: "21401"
        string_val: "94109"
        string_val: "94010"
        string_val: "94043"
        string_val: "94558"
        string_val: "94920"
        string_val: "94022"
        string_val: "46123"
        string_val: "95148"
        string_val: "94553"
        string_val: "94089"
        string_val: "95035"
        string_val: "94103"
        string_val: "95476"
        string_val: "95037"
        string_val: "95476"
        string_val: "94105"
        string_val: "94002"
        string_val: "94002"
        string_val: "94303"
        string_val: "95035"
        string_val: "94553"
        string_val: "94109"
        string_val: "94541"
        string_val: "94945"
        string_val: "94112"
        string_val: "21401"
        string_val: "94132"
        string_val: "94541"
        string_val: "94947"
        string_val: "94062"
        string_val: "94110"
        string_val: "94303"
        string_val: "95032"
        string_val: "94541"
        string_val: "94901"
        string_val: "94112"
        string_val: "95121"
        string_val: "94089"
        string_val: "94558"
        string_val: "94122"
        string_val: "94043"
        string_val: "94038"
        string_val: "94114"
        string_val: "94041"
        string_val: "94108"
        string_val: "94901"
        string_val: "94121"
        string_val: "94109"
        string_val: "94041"
        string_val: "95123"
        string_val: "94108"
        string_val: "94115"
        string_val: "94403"
        string_val: "95120"
        string_val: "94065"
        string_val: "94941"
        string_val: "95118"
        string_val: "94158"
        string_val: "94114"
        string_val: "95023"
        string_val: "89431"
        string_val: "94920"
        string_val: "94063"
        string_val: "94558"
        string_val: "95014"
        string_val: "94920"
        string_val: "94019"
        string_val: "94553"
        string_val: "94044"
        string_val: "95008"
        string_val: "95120"
        string_val: "95121"
        string_val: "94015"
        string_val: "94124"
        string_val: "95446"
        string_val: "95122"
        string_val: "95118"
        string_val: "94602"
        string_val: "94303"
        string_val: "94949"
        string_val: "94027"
        string_val: "94903"
        string_val: "94949"
        string_val: "94558"
        string_val: "95008"
        string_val: "94930"
        string_val: "95020"
        string_val: "94941"
        string_val: "95032"
        string_val: "94025"
        string_val: "94103"
        string_val: "95123"
        string_val: "94105"
        string_val: "95119"
        string_val: "94109"
        string_val: "94928"
        string_val: "94107"
        string_val: "94107"
        string_val: "95008"
        string_val: "95127"
        string_val: "94025"
        string_val: "94553"
        string_val: "94110"
        string_val: "94122"
        string_val: "94947"
        string_val: "95014"
        string_val: "95008"
        string_val: "94558"
        string_val: "94061"
        string_val: "94121"
        string_val: "94028"
        string_val: "94541"
        string_val: "94102"
        string_val: "94303"
        string_val: "94114"
        string_val: "94947"
        string_val: "95126"
        string_val: "94553"
        string_val: "95030"
        string_val: "94553"
        string_val: "95127"
        string_val: "95117"
        string_val: "94303"
        string_val: "95030"
        string_val: "94110"
        string_val: "94403"
        string_val: "94402"
        string_val: "94109"
        string_val: "95121"
        string_val: "95476"
        string_val: "95121"
        string_val: "94044"
        string_val: "94303"
        string_val: "94404"
        string_val: "94089"
        string_val: "94945"
        string_val: "94019"
        string_val: "97701"
        string_val: "21401"
        string_val: "94945"
        string_val: "94089"
        string_val: "94015"
        string_val: "94070"
        string_val: "94025"
        string_val: "95008"
        string_val: "94105"
        string_val: "94112"
        string_val: "94109"
        string_val: "95121"
        string_val: "94563"
      }
    }
  }
}
node {
  name: "SparseTensor/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "?\007\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "SparseTensor_1/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1855
          }
          dim {
            size: 2
          }
        }
        tensor_contentt\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r
      }
    }
  }
}
node {
  name: "SparseTensor_1/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1855
          }
        }
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Cooperative"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Mobile / Manufactured"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Cooperative"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Apartment"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Cooperative"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Cooperative"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Cooperative"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Cooperative"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Cooperative"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
      }
    }
  }
}
node {
  name: "SparseTensor_1/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "?\007\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1855
          }
        }
        tensor_content: "\200\345sI\000\244\265I`\310\244I\360\363\266J\000C\332I\000=[I\000\007\344H\340\001CJ\260\022\203J\300\004\020I\200\376ZI\300\263\302I\300s\243I\200dJI@T\tJ@(\272I\300\207\363I\200=\022I\200\021\303I\200\nYI\200jII`\034IJ\2005\275I\200\260gI\260W\266J\200a\276H\300~\266I\300\263[I\200\324aI\200\253SI\200d4I\000\346\252I@\352mJ\370\376\034K\300\250\257I\200\021CI\200\340\370H\300\212\251I`\013\267J\000|\022J\000\247sI`\034IJ\200\3346I\000=[I\300\254\330I\000\016\316I\314\337\344K\200{[I\000\246\013I\200{\333I\260\227\325J \350\rK\000W-I\300~\266I@\003\325J _\017J\200,\000I\000\000zI\300\306\252I\200\201ZI\000\2366I\000C\332I\340R0J\300\\\222I\200\313$J\200\266\346I\200\376\332I\300\\\222I\340\3146J\000\2307I\200/(I@r\204I\300s#I\300u\022I@\222\322I \305{K\200\211/I\200**J\200\256\024I\0002HI@\032\346I\000K\257H\200FOI\200\000\261I\300\317\347I\000\253\tI\200\324\341J\300\337\221I\300\373\266I\000@\234H\300\232\333I\300\221\236I\000\016\316I\200T#I\300\306\252I\000G\206I@k3I\300\033!I\300\r\264I\000_\202I`\024tJ\200\325LI@\3410J\300\024\236I\000*sH\2005\357H@\020WI\300\026\361I\200\037\001I\300\357QI\300n\017J\300w\314I\3000CJ\200S8I@w\230I\200,\000J\200\000\261I@8\341J\340\332\nJ@\372\227I\260\203\205J\000\320\204I\000\303\033I \207\262J\200a\214I\000\010OI\300\3736J\200\256\224I\300u\022I\000\323BI\000\323BI\000G\206I\300\373\266I@\276\241I\200\237UI\300\232\333I\000\357gI\300e\317I\200\247*I\200\363\307I\000\321lH\000\272\333I\022\331\344J\200zpI\200,\200I\300\261\341I\200a\014I\200\257\374J\200\324aI@\325\262I\300\306\252I\000\317}H\340\034\000J\000\357gI\200,\200I@\254\244I@]\306I \263\201J\300\373\266I\300\207\363I\300\232\333I\000\323\302H\000G\206I\000\033\267I\200\021CI\200\032\203I\000\355\024I\200\010\206I\000\205\317I\240D\tJ@\307^J`H\030J\200\032jI\200{[I@\200\325I\000|\222I\2008{I\300\223qI\300\337\221I\300\024\236I@\305\213I\300e\317I\000\367\274I`QUJ\200\267QI\200\247*I\300\232\333I\200\0001I\000\rcI\000$\364I@E\214HP?\023K\340b\036J\200\021CI\260`sJ\200a\214I@T\tJ\000\205OI\000P\303I`m6J@(\272I \006\tJpx\325J\000\357gI\200\231VI`\365\020K`\241\036J\340\342*I\000\033\267I\200r\036I\300{\222H\3601\203J\000\244\265I\200jII\340\025\026J\200xOI\300R\347I\000i*I\000s\007I\000^\214I\334#tJ\340\3146J\000`jI\300>\214I \311\'J\000\307bI\250\"FK\000\247\363H\000*sH\300\004\364I\200\220\031I@\231\274I\000\252\036I\300\306\252I\200\021CI\200=\222IP*\325J\360\2139I\000PCI\2407\240J\000\321lI@]\306J\200\345\363H\200/>I\300\035\364H\340.HI\000\272\333I\370\204\317I\300\306\252I\000\373\336H\300\330\'J\000|\222I\200\201ZI\200\000\261I\3606\022I@T\tJ\300\330\247I\000\250\336I`\235rJ\200\202/I@<\215I\200S\270I\000\323BI@KIJ\200\226\230I\300\243\233I\200%\026I\200\237\325I\000|\222I\000)\213I\200\226\230I\200\322\016J\200\000\261I\300\341dJ@]\306I\200\313$I\340 tI@\303\265I\000\355xH\200=\022I@\r\000J`7\006J\340\325sJ\300\330\'J@]\306J`\024\364J\200?eI\000\346\252I\200FOI@K\311I\200\000\261J\000\347\225I\000.jG\200\021CIp\203\317I\0007CH\000\247sI@]FJ\000x\346I\200a\214I\300n\017J\000xfI\000d\026I\300\277\300I@\334\234Ipx\325J\200=\022I\000\356|H\200\t\356I\200>zI\000\033\267I\200{[Ip\257\236I@F5I\360\271[I\000~\345I\200=\022I\200\324\341I\200\3346I\000\357gI\200\021CI@\276\241I\340\370\205J\200\3346I\000G\206I@\332\306I\200k4I\200[FJ\000\"\241H\300\252\036I\200\324aI\200FOI`\356gI \347\"J\360\316\321K\000\033\267H@(\272I\200\0001I\300R\347I@\216\251I\200\353rI\000PCJ@\177jI\200\260\347Ix\226\230I\200\342\252I\000B\357H\300I\252I\300\243\233I\300I\252I\200\037\027I@H\213I hLJ\360OCI\200\226\030K@\350\232I@\305\013J`[\262I\000\207\245H\200\027BI\000\357\347H8\316dK\300\341\344K\200{[I\000PCI`\365\220J\200\322\016I\200\247*I\000\0337I\200\177\271H\200=\022I\000\323BI`\376MK\200=\022I\200\345\363I\000\234`H\000@\034I`\273mJ@\247\220I\000)oH\200\313\244I\000\232\215H\200\021CI\200\316bI@\216\251I\000\247\363H\240\315\007J\000PCJ\340\3146J\300~\266I@\222\322J\300\207\363I\200\344\013I\220\353\272K\300\355\342I\200\226\230I\200\021CI\300\207\363I\3000\303I\0006qI@B\214I\370\032\267I\300\3736I@B\014J\000c\022H\000\261\036J\300\r\264J\200dJI\000\375;I\300\373\266I\000^\027I\000k\375H\000\346\252H@\216\251I\300\\\222I\000\357\347I\200y\010I\000\330VI`\310\244I R\246J\300\\\022J\300\207\363I\200\313\244I\200S8I\340\255\036I@\334\234I\000\355\024I\300~\266I\200a\214I\340\325sJ\200(TI\200{[I\200%\026I\360F\206I [\343J\000\357gJ@T\211J\200\240@I\000\245\240H\000\255\362H\200\353rIpU\306J\000\346\252H\200r\236I\000\263qI\000\024\315H@(:J\200jII\000\261\036I\340\201\317I\360\356gI\000\247sI\200\351\037I\000|\222I@\276\241I`7\006J\000-\264H\200\226\030J\200C\021I\300~\266I\200\000\261I\000\205OI\200\010\206I\000\247sI\340b\036J\300\337*I\200\353rI\360{\022I\000~eJ\000\033\267I\200\021CI\000\357\347I\340y\257J0\315\363J\200jII\200\353rI\000\202\021I\200\247*I\300e\317I06\306J\200\021\303I\340\240gJ@\362\302I@d0J`H\030J8\305\'K\360]\317J\020\375\003L\300\252\205I\300\341dK\000\234`J\000\247sI@T\tJ\300\r\264Ix\0077K\340\370\005J\200r\036I\200\313$I\000\037\264H`_)J\200\345sI\200\226\230I\000\201\rH\200=\022I\200\021\303I\300+\257I\200{[I\340Q\214J\200=\022I@\262\250H@\r\200I\000\247sI\200,\000J\300\330\247J\000z<H\300s\230I\200\201ZI\000\323BI\300\3736J\300\277\300I\200\260gI\000~\345H\300\373\266I\200\322\300H\000\261\236I\000\357gI\300N\276I\200x\317H\200\260gI\340\264\210I\360\220\210K\200C\021J\200\306\020K@\254\244I\200\3346I\200\247*I`@\303I\000\301/I\000\013\020I\000k\375H\200{[I\000/\243I\000@\234I`\365\020K\300\'\006J\300\024\236I\200\255)I0\262\333J`\366\306I ;\025J\000\346*J\000\006yI\200\021CI\300I\252I\000\215\244I\000\272[I\200%\213I\200\226\030I\000\263\361I\200\253\210H\300\\\222I\200{[I\200\353rI\200{[I\300\035\333I`}$J\300\337*I0-\211J@\306sI\000x\346I\300\\\222I\300\'\006J\260b\311J\000ICI\000\252\264H \274\276J\000G\006J\300\221\236I\000\343iI\200\021CI\240\306\035J\200a\014J\200\331\252H\000\367<I\000\247sI\200\t\356I\000~\345H\300\\\022I\000\214\271H\200{[I@\n\277I`l\222I\200a\014I\200\226\230I\000\333\027J\360\222#I\000\005\221I\000\2741I\340k[J\000-4I\200\260gI\000\272[I\200%\026I\000\255\362I\000\305\356H\200k4I\200\027BI\000\302\260I\300\254\330I`\311\301J\000 KI\000R\031I\200\021CI\200\353rI\200\0001I\0002\310H\300\031\262I\200\0001J\000|\022H\300~\266I\200\247\252I\340\227*Jp\277\336J\300n\017J@B\214I`\300\004J\300\035\333I\000fiH\300\\\222I\000\272[H\3009\203I\000\252\264H\200\027BI\300I\252I\000\247ZH\000\331\301I\300\330\247I\200\322\016I\200>zI\000_\202I\300\252\205I\300\306\252I\200\226\030J\000*sH\200jIJ\300\341\344I\200=\022I\200\226\230I\200=\022I\300\252\205I\200\nYI\200\266fI\300\261\010I\340{\222H\200,\000J\000\013\220H\300\254XJ@]\306I\340\217\325J\000\037\340H\200\324aI\200,\200I@\275\266J\200\322\016I`\300\004J\000\357\347I\000VBH\000\263\361H\300 \221I\200\3346I\000,\311I\000c\022H\000\343iI@\363\255I\000\"\241G\200\247*I`H\030J\200\353rI\200\313$I\200\000\261I\200\247*I\340Q\014J\200\010\206I\000\337\321H\200r\036I\340k[J@T\"I\200y\010I\200\342gI\200{[I\370{\222I\300w\314I\300\330\247I\000G\006J\300\024\267I\200\226\230I\200jII\240\315\007J\300\r\264I\200j\311I\300\263\302I\200g\213J\200C\021I`\337gJ\200k4I\300\243\033J\200\237\325I\300\232\333I\200\325LI\200\260gI\300\'\206I@\352\355I@\030\223I\000\234\340G\000\200;I\200\353rI\200\223WI\200\226\030J\300\373\266I\000PCJ\230\362\210K\200FOI\300\341dJ@\276!J\300ICI\200\231VI\200FOI\300\r4J\300\263\302I\200\324aJp\005\200J\200\t\356I\000\317\231H\300\221\236I\000\376\246I\000\314XI\200j\311I`\023\014J\200\342\265I\200\260gI\200{[I\200o\222H\200\260gI\200>zI\200\304:I\300#\364H\000|\022I\000$tH\200k4I\300\341dJ\000|\022J\340\0277I\200\226\230I\200\314\017I\000\001\345H@\227\333I\200\267QI\200k\036I\300\350\316I\200\253\210H\000$\364I\300\277\300I\300\004\364I\200\313\244I\300\274\377I\000\336UH\360#tI\300\341\344I\300\'\206I@\r\200I \304\nI@k\232I\200\027\267I\200zpI\300\035\333I@{\301I\000\247sI\200\226\030J\200C\303H\000\232\rI\200G\311I\2004\322J\000\2228H\000\033\267I\200\354GI\000\035tI\300^jH\300\004\364I\0002\275I\000x\346I@\017\323I\000\357\347I\200a\214I\200\353rI\000\006yI`l\222I\000\037\340H@T\211J\300\337\221I\300\330\247J\200\251gI\000\205OJ\200\3721I\200\237UJ\200\3346I\200\246?I\000\262\211I\200\231VI\300\'\206I\200r\036I`\310$I\200\207\331H\3009\003J\200{[I\200\371FI\360\006\006J\200C\303H\200>zI\340\240gJ\000\272\333I\000G\006J \350\215J\000\277VH\\\251\201K\200\260gI\200=\022I\300~\266I\200\237\325I`\241\036J\300;\326I\200\'iI8\242\007K\300B\300I@w\030J\000\261\036I\200x\222I\200=\022I\200LNI\000\323\302H@\341\260I\000VBH\200\224BI\200\021CI\200/>I\000\"\241H\000\330VI\200\336sIpo\230J\360]\317J@@\266I\000\215$I \302\213I`}$J\000\0337I\000\\AI\000\317\231H\200\305%I\260,\000J \350\215K\200\000\246I\000$tJ\200\313\244I\200,\000I\000\346\252I\256\225\202J\300\373\266I\000\005\221I\300~\266I\300\r4J\300\341\344J\000PCK\300\373\266I\000\272\333I\340\206\030J\200\021CI\000\227\314H\260G\217J\000G\206I\200C\021I\300\341\344I\300n\017J\000k\375H\200\314\017I@\270\242I\300\266\203I\300\350\316I\200a\214I\340\370\005J@\374\352I\200,\000J\000\346*H\000g\324I\360T\222J@\026\262I\000\261\036J\200\237UI@T\211J\300v\341I\200mqI\200\255)I@\r\000J\200\336sI\200a\014I\300\\\222I@~\202I\000P\303H\300\337\221I\000\277VH\000\261\036I\000GjH\200\021CI\300\266\203I\300)\331I\000\257HJ\200=\022I\360\345*I\200\226\230H\300\207\363I\000|\222I\000n\276I\2006\022I\360\0327I\000\252\264I@d\260I\200\336sI@T\211J\000\013\020I\000u(I@w\230I\300\274\377I\030\217\007J\300\207\363I\360OCI\200\231VI\000\014\370H\000\243\312H\200\235\264H@\334\234I\000;\210H\\\262>L\300\024\236I\000G\006J0\021\341K\200\021CI\000\247sI@\245\272I\000\272\333I\000\357gI\000\261\236I\000)\200I\000o\251I@\222\322I\000\014xH\300\3736I\200\010\206I\200<\'I\300^\001I\300n\217Ip\237UI\200a\214I\200\027\302I\200\222lI\200\201ZI\3009\003J\340\342*I\200=\022I\300o\336J\000\352SI\340\030TK\000\033\267H\200\226\030J\300~\266I\000\323\302H\200r\036I@T\211I\200\237\325I\000:\235I\000\346\252I\200\324aJ\300~\266I\000Y\203H@\341\260I\300\263\302I\340\201\317I\300Y\306I\200\226\030I\200\nCI\240\364?J\200\235\264H@]FJ\000P\303H\300\024\236Ip\277\336J\000@\034I\000\366QI\2005=I\200\226\030J\000n\222H\360\345*I\200!jI@]\306J\200\001\034I\200y\210I\200{[I R\246J\300\207\363I\340 tI\300\337\221I\010\034\214I\000g\324H\000\036\221I\000\243JI\340zeI@\021\251I\000\0247I\200=\022I\200\345sI@\303\252I\300\024\236I\0202\020K\300P\224I\000\330\326I\300n\017J\374\345*J\200a\214I\200{[I\000\247\363H\370k\007K\000\247sI\000o\251I\0004\036I\000@\034H\000u\250H\300~\266I\200\021CI\200!jI\300\221\236I@\026\275I\300\337\221I@Y\222I\200\260gI\300\3736J\000\272\333I\200\226\230I\277\341dK\000\205\317I\000\337@I\200\010\206I\200\325LI@T\211J\340\032\267H0\236\213K\000\245\240H\200\226\230IP\222\232Jp\025\'K\300B\300I\300\346\370I\000\205OI\300\252\205I\000\375\273H\000\013tH\260`sJ\200\226\030J\340\217UJ\300\r\264I\300\337\021I\000\000\372G@8\341I\200\226\230I\200{[I\000\223\230I\300\221\236I\300\0247I\200j\311I\000G\006J\200\313\244I\300n\017J\200\313$J\200{[I\300\024\236I\340\370\205J\000\247sI\300\330\247I\200\371\306I\000|\222I\300\223\346I@Y\222I\300\350\316I\000\323\302H@\036\222J\000\033\267H\200a\014J\000G\206I\000\2662H\200\352\nI\370#\364I@\357\204I\000u\250H`\365\020J\340\256\273J\240@]J@\254\244I\200<\021I\200\237\325I\300>\227I\000F\033H`H\030J\300\024\236I\360#tI\0008\307H\360#tI\200\311NJ\200\313\244I\000|\222I\200F\317I\200\227\003I\300\344%I\370\354\224I@w\230I`$\036J@\370\266I\000$\364I\000\033\267I\000\232\rI\000\005\221I\200\324aI\300\221\236I`QUJ\000fiH\000G\206I\200\365\035J\200\027BI\000\033\267I\200>zI\000P\303H\270\225\030J\300\221\236I\300\341\344J~\226\230J@\345\331I\000\270\010I\300\\\222I\000\261\036I\200\237UJ\000NmJ\2005=J\200j\311I`}$J\200?eI8<\215I\000\0337I\200{[I\200\021\303I\200\223\327H\200\255)I`\365\020J\200\tnI\300\221\236I\300^\332I\200\222lI\200\226\230I\300\232\333I\300~6J\000\317\231H\2005\275I\240y\222Hp\036dK\000\220bI@]FJ@T\tJ\200\247*I\300\263\302I\300\373\266I\200a\014I@\276!J\300\024\236I\3000\310H\340\001CJ\200\0001I\200a\214I\000n>I@\026\275I\300\024\236I\000\244gI\000@\234H R\246K@K\311I\200\345sI\300Q\374I`\235rJ\200q\345H\300\232\333I\320<\211K\000rgIp\247\305I\300\232\333I\200r\036I\200!jI\360\323\314I@\323\334I\300\330\'J\340ZIJ\300B@J\300~\266I\200\351\321H\200\226\230J\300\350gI@\263\216I\200\345sI\200\345sI\200\010\206I\360\363\266J0-\211J\200\313\244I\200\343 I\200{[I\200,\200I \305{K@\036\222J\2005\275I\360\222\333J\000\310\031I\2005\275Ip\257\036J\000\310/H\200\247*I\000\306\331I\240D\tJ\000^\027H\000P\303I\000\353%Hp\344\252I\000\320\204I@\200\325I\200jII\000i*I\200{[I\300\263\302IpV\213I\240@]K\200>zI\200a\014I\000IYI\200jIJ\300\373\266I\340\0277I\200\334\266I\300\330\'J\000\346\252I\300\317\347I\300~\266I\000\323\302H`7\006J\200\021CI\200r\036I\000\033\267I\000ICI\200a\014I\3009\003J\020\254\317Jh\356\347I\000\215\244I\000\232\215I\320$\rK\240\314gI\300\306\252I\200{[I\000*sH@\363\255I`\241\036J\000\323\302H \263\201J\000=[I@w\230I\000u(I\300n\217J\200,\200I@\211\225I\000\261\036I\300\'\206I\000\275\003H\000PCJ\000C\332I\200\002\007I\000\247\363H\000Y\003I\200{[I\200\220\031I@B\214I\000fiH\000PCK\300\330\247J\200y\010I\300\232\333I\200\tnI\000BoI\200\260gI`\365\020K\300\341\344I\300U\250I\200\353rI\300B\300I@B\214I\300\026qJ\000PCH\200\226\230I\000|\022J@\316HJ\300\221\236I\200\244iI\000PCJ\200\021CI\000\272\333I@w\230I\200[\rI\200\210\304I\000\353%H\300\207\363I\300u\022I0\227\241J\200\226\230I\000\"\241H\3000\303I\000\350\375I\200\0001I\000\333\027J\360\356\347I\360\271[I\200<\'I\300\341dJ@\341\260I\260\374;I\200jII`\235\362J`7\006J\200\251gI\000-\264I R\246J\000\321\354H\340\017\227J\200\226\030J\370t\222I\200\227\203I\300\274\377I\200zpI\200\177\271H ;\025J R&J\220\315\277J\200dJI\200\201ZI\200\345sI\000\356|H\200mqI\300~\266I\300~OI\24006J\000`jI\000\342\376I\000^\027I\200\3721I\300e\317I\200{[I\000\261\236IP\002II@\231<J\000\323BI\300\243\033J@\352\355I\000VBH@~\377I\2003\234H\200\235\264H\200{[I\300\277\300I\200,\000J\260#tI\300\364\301I\340\017\027J\000\017\271H\240 \217J\000\205\317H\274\214\230K\000|\022J\300\337*I\300>\214I`\376\315J\200>zJ\300\350\316I\200\t\356IP\362<K\340\206\030J\300\\\222I\330\260\236I@\372\227I\000\272\333I\300n\217I@T\211J\000\357gI\370\202\030K\300\221\236I\340b\036J\200\'\351I\200\010\206I\200\3721I\200\331\252H\300n\217I\300~\266I\200\324aI\000\247\363H\000PCJ\200\260gI\200\345sI\000\205OI\200\260gI\300\207\363I\000\033\267H0\003\364I\000\337@I`\232\202I\000\330VI\200\3346I\340Q\014J\300\277\300I\340\255\036I\300\024\236I\300w\314I\000\324\255G\200\353rI\300\373\266I\300I\252I\000\021\217J\000G\206I\200\237\325I@t\327I\320$\215K\200t[I\300n\017J\000TlI\200\001\234I\000\232\rI\200\246?I\300n\017J\300\004tJ\200,\200I\000`\352G\200\226\030J\000\247\363H@T\211J\300\317\347I\330\260\036J\3000CI\340\017\227J\0002HH\200\213\236I\000\013\220I\000\350\375H\200\345\363H\200[\rI\000\304\206G`\013\267I\300\263\302I`\013\005I@\365\203I\000|\222I\000\357gI\200\226\230I`\365\020K@B\014J\340\351\024IpS\360J\200\001\034I@\222\322I\200\021CI\200\260gI\0002\310H\000|\222I\200x\035I\000\200\273G\000e\001I\270@\tK`}$J\300 \221I\250\002\231I\260\227\325J\200\353rI\000\205\317H\300\024\236I\000\000zI\200\353rI\000\357gI\300\373\004J\000\366\321H\2005=I\200\331\252H\000o\251I\200\220\031I\300\004\364I@]FK\300\207\363I\200\tnI\000\310\257H\000\243\312H\200dJI\200\220\031I\000\226\257G\300\232\333I\300\357\255I\200\220\031I\200\313$J\300\035\333I\000$\364H\000\205OJ\300I\252I\300w\314I`QUJpx\325J\200L\316I\200\237\325I\360\037\206J\000\247sI@D\337I\200C\221I\3009\203I\000G\006K0\021aK\000\252\264H\3406OJ\200\333\375H@\344*J\000\346*J\000\017\256I\240\210\251H\200=\222H\200\237\325I\270\221\236I@\254\244I@\363\255I\200\021CI\000\243\312I\300~\266I\300\207\363J\340b\036J\000n>I R&K\240@]J,\261\201K\300\221\236I@\350\232I\200r\036I\000\004&H\300\306*I\200zpI\000\346\252I\0006qI\200h\217I\200T\243I@T\211I\3406OJ\200\313\244I\200\3346Ipx\325J\000+\336H\200r\036I\200\365\035J\300I\252I\330\032\267I\340\266[I\020\024\225J\200q3I\000|\222I`QUJ\200\222lI\200\246\277I\000\"\241I\000\247\363H\200\247*I\200\tnI\2008{I@w\230I@\350\232I\2005=J\200\304:I\200\324aI\360\305\024L\200\010\006I\300\004tI\000\006yI\200\311\203H\200\tnI\340\030\324J\200q3I\000\324-H\034\0260J\000\254\nI\300I\252I\000\037`I\300I\252I\200\255\251I\000\247sI\000:\235I\200\217\256I\000\247\363H\300^\001I\000\263[I@\036\222J\300\277\300I\200\237\325I@\334\234I\200,\000I\000z\325I\000G\006I@T\211J\340\3146J\340L\303Ipo\230J\200\253\210H\000i*I\000\357gI\000\261\036I\000PCI\360\363\266J@T\tJ\220\353:K\300K}J\200r\236I\320$\rK`\024tJ\200FOIP#tI\300\207\363I\000@\234I\200t[I\200\201ZI\200,\000J\200\3721I\000\272[I\340\217UJ\300\024\236I\000G\206I\300\221\236I\200\275PI\000=[I\000\337\300H\0004\036I\300\317gJ\000G\006J\300n\017J\000B\303H\200\237\325I\300\306\252I\200\3425I\200\3346I\000=[I\200\226\230I\200H%I\200FOI\200\tnI\270@\tK\000\323BI \361JJ\200\345sI\200\tnJ\200,\200I\200\226\230I\360_jI\300\373\266I\000|\022I\300^\332I\200\353rI\3009\203I\360\363\266J@-\303I\000\010OI\200\324\341I\200\nYI\300\035tI\200\324aI\200\353rI@\254$J\000\244gI\370O\303I\200\325LI\340B\tJ\000\247\363H\000P\303H\300n\217I\200,\200K\340\001CJ\000\323\302H\200{[I\000P\303G\000\272[I\000P\303G\200=\022I\000\346\252I`\326*J\000\205\317I\300w\314I\3000\365H\2005=J \274\276J\340\273$J\3009\003J\300s\243I\300\207sJ\000\\AH\200\231VI\260\261\247J`\235\362J\000s9H\200\313$I\240LCI\200o\222H\200\316LI\000\357gJ\300\'\206I\200\353\347IH\030tK@\r\200I\200\247\252I\000\205OJ\200cII\200\177\207I\000\323\302H\300>\227I@\0327I\3603\275I@\247\220I\000\247\363H\300R\347I\340\304/I\200\360\tI#\0337K\300~\266I\000\272[I\000\302\260I\000|\022I\200/>I\000&JI\000ICI\000\346*H\240\326DK\200LNJ\000\223#I\300\337\221I\240@\335J\000\302UH\000w\373H\000\"\241H\330\032\267I\200\227\003I\000\310/J\000\243JI\200[\rI@\363\255J@\026\275I\340LCI\000\322\327I@\254\244I\370\271\333I\000\257HJ\2407 K\200\316bI\000\303\233H\360(\303J\000\247sI\000\303\233H\000\205\317I\330\341\020K\200j\311I\300\306\252I\200FOI\200F\317I\200\211\257I\200\021CI\200\336sI\200FOI\200LNI\360m>I\300|eI\300\330\247I@T\211J\240\343-J\260\346\263J\200\247*I@;\242I\200FOI\200\247*I\200\255)I\200\217.I@\021\251I@]FJ\340%\275J\200jII\000\206lI \361JJ\200{[I\000i\252H\000\317\031I\200>zI\200\313\244I\200\334\266I@\'OI\200L\303I\200\322\016I\000\272[J\000PCI\300\207\363I\000~OI\200\334\266I \274>K\200k4I\200,\000J\300\026qJ\200\021CI\000_\202I\300\'\206I\200g\213J\300\035\333I\300\\\022J\200\276;I\3406OJ\000\027\016I\200r\236I\300\rMI\300\252\205I`l\022J\200\226\030J\300\\\222I`\241\036J\200q\263I\360\356gI@\305\213I\000[VI\300\306\252I\200\336sI\0006qI\000\242_H@\200\325I\300\024\236I\000\033\267H\200j\311I\300~\266I\000Y\203H\000\341\026I\000\205\317I\300\306*J\200jII\2005=J\2005\275I\000\247sI\000\337@I\240\225\230J"
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/bucketize"
  op: "Bucketize"
  input: "Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
  attr {
    key: "boundaries"
    value {
      list {
        f: 0.0
        f: 200.0
        f: 400.0
        f: 600.0
        f: 800.0
        f: 1000.0
        f: 1200.0
        f: 1400.0
        f: 1600.0
        f: 1800.0
        f: 2000.0
        f: 2200.0
        f: 2400.0
        f: 2600.0
        f: 2800.0
        f: 3000.0
        f: 3200.0
        f: 3400.0
        f: 3600.0
        f: 3800.0
        f: 4000.0
        f: 4200.0
        f: 4400.0
        f: 4600.0
        f: 4800.0
        f: 5000.0
        f: 5200.0
        f: 5400.0
        f: 5600.0
        f: 5800.0
      }
    }
  }
}
node {
  name: "linear/linear/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1855
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/shape"
  input: "linear/linear/strided_slice/stack"
  input: "linear/linear/strided_slice/stack_1"
  input: "linear/linear/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/range"
  op: "Range"
  input: "linear/linear/range/start"
  input: "linear/linear/strided_slice"
  input: "linear/linear/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zeros/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "linear/linear/zeros/Less"
  op: "Less"
  input: "linear/linear/strided_slice"
  input: "linear/linear/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/zeros/packed"
  op: "Pack"
  input: "linear/linear/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zeros"
  op: "Fill"
  input: "linear/linear/zeros/packed"
  input: "linear/linear/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/reshape"
  op: "Reshape"
  input: "linear/linear/bucketize"
  input: "linear/linear/reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/stack"
  op: "Pack"
  input: "linear/linear/range"
  input: "linear/linear/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1855
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/transpose/Rank"
  op: "Rank"
  input: "linear/linear/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/transpose/sub"
  op: "Sub"
  input: "linear/linear/transpose/Rank"
  input: "linear/linear/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/transpose/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/transpose/Range"
  op: "Range"
  input: "linear/linear/transpose/Range/start"
  input: "linear/linear/transpose/Rank"
  input: "linear/linear/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose/sub_1"
  op: "Sub"
  input: "linear/linear/transpose/sub"
  input: "linear/linear/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose"
  op: "Transpose"
  input: "linear/linear/stack"
  input: "linear/linear/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/ToInt64"
  op: "Cast"
  input: "linear/linear/transpose"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/stack_1/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/stack_1"
  op: "Pack"
  input: "linear/linear/strided_slice"
  input: "linear/linear/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/ToInt64_1"
  op: "Cast"
  input: "linear/linear/stack_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Assign"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0"
  input: "linear/size_bucketized/weights/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/read"
  op: "Identity"
  input: "linear/size_bucketized/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice"
  op: "Slice"
  input: "linear/linear/ToInt64_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice/begin"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Prod"
  op: "Prod"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GatherV2/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GatherV2"
  op: "GatherV2"
  input: "linear/linear/ToInt64_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GatherV2/indices"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Cast/x"
  op: "Pack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Prod"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GatherV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape"
  op: "SparseReshape"
  input: "linear/linear/ToInt64"
  input: "linear/linear/ToInt64_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Cast/x"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear/reshape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Where"
  op: "Where"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Where"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GatherV2_1"
  op: "GatherV2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GatherV2_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GatherV2_2"
  op: "GatherV2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GatherV2_2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  op: "Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseFillEmptyRows"
  op: "SparseFillEmptyRows"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GatherV2_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GatherV2_2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseFillEmptyRows"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseFillEmptyRows:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  op: "GatherV2"
  input: "linear/size_bucketized/weights/part_0/read"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  op: "Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse"
  op: "SparseSegmentSum"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseFillEmptyRows:2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/stack"
  op: "Pack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/stack/0"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Tile"
  op: "Tile"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights"
  op: "Select"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Tile"
  input: "linear/linear/size_bucketized/size_bucketized_weights/zeros_like"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Cast_1"
  op: "Cast"
  input: "linear/linear/ToInt64_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1"
  op: "Slice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Cast_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/begin"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Shape_1"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2"
  op: "Slice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Shape_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/begin"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/concat"
  op: "ConcatV2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_2"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights"
  input: "linear/linear/size_bucketized/size_bucketized_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_1"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_2"
  input: "linear/linear/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bathroom/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/bathroom/ExpandDims"
  op: "ExpandDims"
  input: "Const_1"
  input: "linear/linear/bathroom/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Assign"
  op: "Assign"
  input: "linear/bathroom/weight/part_0"
  input: "linear/bathroom/weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/read"
  op: "Identity"
  input: "linear/bathroom/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bathroom/weight"
  op: "Identity"
  input: "linear/bathroom/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bathroom/matmul"
  op: "MatMul"
  input: "linear/linear/bathroom/ExpandDims"
  input: "linear/bathroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_2"
  op: "Reshape"
  input: "linear/linear/bathroom/matmul"
  input: "linear/linear/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bedroom/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/bedroom/ExpandDims"
  op: "ExpandDims"
  input: "Const"
  input: "linear/linear/bedroom/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Assign"
  op: "Assign"
  input: "linear/bedroom/weight/part_0"
  input: "linear/bedroom/weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/read"
  op: "Identity"
  input: "linear/bedroom/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bedroom/weight"
  op: "Identity"
  input: "linear/bedroom/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bedroom/matmul"
  op: "MatMul"
  input: "linear/linear/bedroom/ExpandDims"
  input: "linear/bedroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_3"
  op: "Reshape"
  input: "linear/linear/bedroom/matmul"
  input: "linear/linear/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lookup"
  op: "StringToHashBucketFast"
  input: "SparseTensor_1/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 50
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/property_type/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Assign"
  op: "Assign"
  input: "linear/property_type/weights/part_0"
  input: "linear/property_type/weights/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/read"
  op: "Identity"
  input: "linear/property_type/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice"
  op: "Slice"
  input: "SparseTensor_1/dense_shape"
  input: "linear/linear/property_type/property_type_weights/Slice/begin"
  input: "linear/linear/property_type/property_type_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Prod"
  op: "Prod"
  input: "linear/linear/property_type/property_type_weights/Slice"
  input: "linear/linear/property_type/property_type_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GatherV2/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GatherV2"
  op: "GatherV2"
  input: "SparseTensor_1/dense_shape"
  input: "linear/linear/property_type/property_type_weights/GatherV2/indices"
  input: "linear/linear/property_type/property_type_weights/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Cast/x"
  op: "Pack"
  input: "linear/linear/property_type/property_type_weights/Prod"
  input: "linear/linear/property_type/property_type_weights/GatherV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseReshape"
  op: "SparseReshape"
  input: "SparseTensor_1/indices"
  input: "SparseTensor_1/dense_shape"
  input: "linear/linear/property_type/property_type_weights/Cast/x"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear/lookup"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear/property_type/property_type_weights/SparseReshape/Identity"
  input: "linear/linear/property_type/property_type_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Where"
  op: "Where"
  input: "linear/linear/property_type/property_type_weights/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/Where"
  input: "linear/linear/property_type/property_type_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GatherV2_1"
  op: "GatherV2"
  input: "linear/linear/property_type/property_type_weights/SparseReshape"
  input: "linear/linear/property_type/property_type_weights/Reshape"
  input: "linear/linear/property_type/property_type_weights/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GatherV2_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GatherV2_2"
  op: "GatherV2"
  input: "linear/linear/property_type/property_type_weights/SparseReshape/Identity"
  input: "linear/linear/property_type/property_type_weights/Reshape"
  input: "linear/linear/property_type/property_type_weights/GatherV2_2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Identity"
  op: "Identity"
  input: "linear/linear/property_type/property_type_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseFillEmptyRows"
  op: "SparseFillEmptyRows"
  input: "linear/linear/property_type/property_type_weights/GatherV2_1"
  input: "linear/linear/property_type/property_type_weights/GatherV2_2"
  input: "linear/linear/property_type/property_type_weights/Identity"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1855
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseFillEmptyRows"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseFillEmptyRows:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup"
  op: "GatherV2"
  input: "linear/property_type/weights/part_0/read"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  op: "Identity"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse"
  op: "SparseSegmentSum"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape_1"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseFillEmptyRows:2"
  input: "linear/linear/property_type/property_type_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/Shape"
  input: "linear/linear/property_type/property_type_weights/strided_slice/stack"
  input: "linear/linear/property_type/property_type_weights/strided_slice/stack_1"
  input: "linear/linear/property_type/property_type_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/stack"
  op: "Pack"
  input: "linear/linear/property_type/property_type_weights/stack/0"
  input: "linear/linear/property_type/property_type_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Tile"
  op: "Tile"
  input: "linear/linear/property_type/property_type_weights/Reshape_1"
  input: "linear/linear/property_type/property_type_weights/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights"
  op: "Select"
  input: "linear/linear/property_type/property_type_weights/Tile"
  input: "linear/linear/property_type/property_type_weights/zeros_like"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Cast_1"
  op: "Cast"
  input: "SparseTensor_1/dense_shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_1"
  op: "Slice"
  input: "linear/linear/property_type/property_type_weights/Cast_1"
  input: "linear/linear/property_type/property_type_weights/Slice_1/begin"
  input: "linear/linear/property_type/property_type_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "?\007\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_2"
  op: "Slice"
  input: "linear/linear/property_type/property_type_weights/Shape_1"
  input: "linear/linear/property_type/property_type_weights/Slice_2/begin"
  input: "linear/linear/property_type/property_type_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/concat"
  op: "ConcatV2"
  input: "linear/linear/property_type/property_type_weights/Slice_1"
  input: "linear/linear/property_type/property_type_weights/Slice_2"
  input: "linear/linear/property_type/property_type_weights/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape_2"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights"
  input: "linear/linear/property_type/property_type_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_4"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/Reshape_2"
  input: "linear/linear/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lookup_1"
  op: "StringToHashBucketFast"
  input: "SparseTensor/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 1000
    }
  }
}
node {
  name: "linear/zipcode/weights/part_0/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/zipcode/weights/part_0/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/zipcode/weights/part_0/Initializer/zeros"
  op: "Fill"
  input: "linear/zipcode/weights/part_0/Initializer/zeros/shape_as_tensor"
  input: "linear/zipcode/weights/part_0/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/zipcode/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/zipcode/weights/part_0/Assign"
  op: "Assign"
  input: "linear/zipcode/weights/part_0"
  input: "linear/zipcode/weights/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/zipcode/weights/part_0/read"
  op: "Identity"
  input: "linear/zipcode/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice"
  op: "Slice"
  input: "SparseTensor/dense_shape"
  input: "linear/linear/zipcode/zipcode_weights/Slice/begin"
  input: "linear/linear/zipcode/zipcode_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Prod"
  op: "Prod"
  input: "linear/linear/zipcode/zipcode_weights/Slice"
  input: "linear/linear/zipcode/zipcode_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/GatherV2/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/GatherV2"
  op: "GatherV2"
  input: "SparseTensor/dense_shape"
  input: "linear/linear/zipcode/zipcode_weights/GatherV2/indices"
  input: "linear/linear/zipcode/zipcode_weights/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Cast/x"
  op: "Pack"
  input: "linear/linear/zipcode/zipcode_weights/Prod"
  input: "linear/linear/zipcode/zipcode_weights/GatherV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseReshape"
  op: "SparseReshape"
  input: "SparseTensor/indices"
  input: "SparseTensor/dense_shape"
  input: "linear/linear/zipcode/zipcode_weights/Cast/x"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear/lookup_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear/zipcode/zipcode_weights/SparseReshape/Identity"
  input: "linear/linear/zipcode/zipcode_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Where"
  op: "Where"
  input: "linear/linear/zipcode/zipcode_weights/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Reshape"
  op: "Reshape"
  input: "linear/linear/zipcode/zipcode_weights/Where"
  input: "linear/linear/zipcode/zipcode_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/GatherV2_1"
  op: "GatherV2"
  input: "linear/linear/zipcode/zipcode_weights/SparseReshape"
  input: "linear/linear/zipcode/zipcode_weights/Reshape"
  input: "linear/linear/zipcode/zipcode_weights/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/GatherV2_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/GatherV2_2"
  op: "GatherV2"
  input: "linear/linear/zipcode/zipcode_weights/SparseReshape/Identity"
  input: "linear/linear/zipcode/zipcode_weights/Reshape"
  input: "linear/linear/zipcode/zipcode_weights/GatherV2_2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Identity"
  op: "Identity"
  input: "linear/linear/zipcode/zipcode_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/SparseFillEmptyRows"
  op: "SparseFillEmptyRows"
  input: "linear/linear/zipcode/zipcode_weights/GatherV2_1"
  input: "linear/linear/zipcode/zipcode_weights/GatherV2_2"
  input: "linear/linear/zipcode/zipcode_weights/Identity"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1855
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/SparseFillEmptyRows"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/SparseFillEmptyRows:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup"
  op: "GatherV2"
  input: "linear/zipcode/weights/part_0/read"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/Unique"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  op: "Identity"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse"
  op: "SparseSegmentSum"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Reshape_1"
  op: "Reshape"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/SparseFillEmptyRows:2"
  input: "linear/linear/zipcode/zipcode_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Shape"
  op: "Shape"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/zipcode/zipcode_weights/Shape"
  input: "linear/linear/zipcode/zipcode_weights/strided_slice/stack"
  input: "linear/linear/zipcode/zipcode_weights/strided_slice/stack_1"
  input: "linear/linear/zipcode/zipcode_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/stack"
  op: "Pack"
  input: "linear/linear/zipcode/zipcode_weights/stack/0"
  input: "linear/linear/zipcode/zipcode_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Tile"
  op: "Tile"
  input: "linear/linear/zipcode/zipcode_weights/Reshape_1"
  input: "linear/linear/zipcode/zipcode_weights/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights"
  op: "Select"
  input: "linear/linear/zipcode/zipcode_weights/Tile"
  input: "linear/linear/zipcode/zipcode_weights/zeros_like"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Cast_1"
  op: "Cast"
  input: "SparseTensor/dense_shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice_1"
  op: "Slice"
  input: "linear/linear/zipcode/zipcode_weights/Cast_1"
  input: "linear/linear/zipcode/zipcode_weights/Slice_1/begin"
  input: "linear/linear/zipcode/zipcode_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "?\007\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice_2"
  op: "Slice"
  input: "linear/linear/zipcode/zipcode_weights/Shape_1"
  input: "linear/linear/zipcode/zipcode_weights/Slice_2/begin"
  input: "linear/linear/zipcode/zipcode_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/concat"
  op: "ConcatV2"
  input: "linear/linear/zipcode/zipcode_weights/Slice_1"
  input: "linear/linear/zipcode/zipcode_weights/Slice_2"
  input: "linear/linear/zipcode/zipcode_weights/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Reshape_2"
  op: "Reshape"
  input: "linear/linear/zipcode/zipcode_weights"
  input: "linear/linear/zipcode/zipcode_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_5/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_5"
  op: "Reshape"
  input: "linear/linear/zipcode/zipcode_weights/Reshape_2"
  input: "linear/linear/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/AddN"
  op: "AddN"
  input: "linear/linear/Reshape_1"
  input: "linear/linear/Reshape_2"
  input: "linear/linear/Reshape_3"
  input: "linear/linear/Reshape_4"
  input: "linear/linear/Reshape_5"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Assign"
  op: "Assign"
  input: "linear/bias_weight/part_0"
  input: "linear/bias_weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bias_weight/part_0/read"
  op: "Identity"
  input: "linear/bias_weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bias_weight"
  op: "Identity"
  input: "linear/bias_weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/BiasAdd"
  op: "BiasAdd"
  input: "linear/linear/AddN"
  input: "linear/bias_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear/regression_head/predictions/scores"
  op: "Squeeze"
  input: "linear/linear/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/predictions/Identity"
  op: "Identity"
  input: "linear/regression_head/predictions/scores"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss/ExpandDims"
  op: "ExpandDims"
  input: "Const_3"
  input: "linear/regression_head/mean_squared_loss/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss/sub"
  op: "Sub"
  input: "linear/linear/BiasAdd"
  input: "linear/regression_head/mean_squared_loss/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss"
  op: "Square"
  input: "linear/regression_head/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss/loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss/loss"
  op: "Mean"
  input: "linear/regression_head/mean_squared_loss"
  input: "linear/regression_head/mean_squared_loss/loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "linear/regression_head/mean_squared_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "?\007\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/Shape"
  input: "linear/regression_head/strided_slice/stack"
  input: "linear/regression_head/strided_slice/stack_1"
  input: "linear/regression_head/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/Fill"
  op: "Fill"
  input: "linear/regression_head/train_op/gradients/Shape"
  input: "linear/regression_head/train_op/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/Fill"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "?\007\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Tile"
  op: "Tile"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1855.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/truediv"
  op: "RealDiv"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Tile"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/Const"
  op: "Const"
  input: "^linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/Mul"
  op: "Mul"
  input: "linear/regression_head/mean_squared_loss/sub"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/Mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/truediv"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Neg"
  op: "Neg"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "?\007\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/Mul_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "?\007\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/Mul_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "?\007\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_3_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/Mul_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "?\007\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_4_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/Mul_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "?\007\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_5_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/Mul_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_1_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/bathroom/matmul_grad/MatMul"
  op: "MatMul"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_2_grad/Reshape"
  input: "linear/bathroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/bathroom/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/bathroom/ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/bedroom/matmul_grad/MatMul"
  op: "MatMul"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_3_grad/Reshape"
  input: "linear/bedroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/bedroom/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/bedroom/ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "?\007\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_4_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "?\007\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_5_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/size_bucketized/size_bucketized_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/Select"
  op: "Select"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/Select_1"
  op: "Select"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/zeros_like"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/property_type/property_type_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/Select"
  op: "Select"
  input: "linear/linear/property_type/property_type_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/Select_1"
  op: "Select"
  input: "linear/linear/property_type/property_type_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/zeros_like"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/zipcode/zipcode_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights_grad/Select"
  op: "Select"
  input: "linear/linear/zipcode/zipcode_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/Reshape_2_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights_grad/Select_1"
  op: "Select"
  input: "linear/linear/zipcode/zipcode_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights_grad/zeros_like"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1855
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/GatherV2"
  op: "GatherV2"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/Select_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Cast"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/GatherV2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/GatherV2"
  op: "GatherV2"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/Select_1"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Cast"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/GatherV2"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse_grad/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse_grad/GatherV2"
  op: "GatherV2"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights_grad/Select_1"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/Cast"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse_grad/GatherV2"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\037\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ToInt32"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ToInt32"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/ToInt32"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 124
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta1_power/Assign"
  op: "Assign"
  input: "linear/regression_head/train_op/beta1_power"
  input: "linear/regression_head/train_op/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta1_power/read"
  op: "Identity"
  input: "linear/regression_head/train_op/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta2_power/Assign"
  op: "Assign"
  input: "linear/regression_head/train_op/beta2_power"
  input: "linear/regression_head/train_op/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta2_power/read"
  op: "Identity"
  input: "linear/regression_head/train_op/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/zipcode/weights/part_0/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/zipcode/weights/part_0/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/zipcode/weights/part_0/Adam/Initializer/zeros"
  op: "Fill"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam/Initializer/zeros/shape_as_tensor"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/linear/zipcode/weights/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/zipcode/weights/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/zipcode/weights/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Unique"
  op: "Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Shape"
  op: "Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack_1"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Unique:1"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub/x"
  input: "linear/regression_head/train_op/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Sqrt"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_1"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_1/x"
  input: "linear/regression_head/train_op/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/truediv"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_2"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_2/x"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_2"
  op: "Mul"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/read"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd"
  op: "ScatterAdd"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_1"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_3"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_3"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_3/x"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_4"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_3"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_5"
  op: "Mul"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/read"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Assign_1"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd_1"
  op: "ScatterAdd"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_4"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Sqrt_1"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_6"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/truediv"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/add"
  op: "Add"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Sqrt_1"
  input: "linear/regression_head/train_op/Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/truediv_1"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_6"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/AssignSub"
  op: "AssignSub"
  input: "linear/size_bucketized/weights/part_0"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  op: "NoOp"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/AssignSub"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/bathroom/weight/part_0"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/bathroom/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/bedroom/weight/part_0"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/bedroom/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Unique"
  op: "Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Shape"
  op: "Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack_1"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Unique:1"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub/x"
  input: "linear/regression_head/train_op/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Sqrt"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_1"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_1/x"
  input: "linear/regression_head/train_op/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/truediv"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_2"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_2/x"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_2"
  op: "Mul"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam/read"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd"
  op: "ScatterAdd"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_1"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_3"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_3"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_3/x"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_4"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_3"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_5"
  op: "Mul"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/read"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Assign_1"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd_1"
  op: "ScatterAdd"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_4"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Sqrt_1"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_6"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/truediv"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/add"
  op: "Add"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Sqrt_1"
  input: "linear/regression_head/train_op/Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/truediv_1"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_6"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/AssignSub"
  op: "AssignSub"
  input: "linear/property_type/weights/part_0"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/group_deps"
  op: "NoOp"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/AssignSub"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Unique"
  op: "Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 124
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Shape"
  op: "Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/strided_slice/stack"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/strided_slice/stack_1"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/zipcode/zipcode_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Unique:1"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/sub"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/sub/x"
  input: "linear/regression_head/train_op/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Sqrt"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/mul"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/sub_1"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/sub_1/x"
  input: "linear/regression_head/train_op/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/truediv"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/mul"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/sub_2"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/sub_2/x"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/mul_2"
  op: "Mul"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam/read"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/ScatterAdd"
  op: "ScatterAdd"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/mul_1"
  input: "^linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/mul_3"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/sub_3"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/sub_3/x"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/mul_4"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/mul_3"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 124
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/mul_5"
  op: "Mul"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1/read"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Assign_1"
  op: "Assign"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/ScatterAdd_1"
  op: "ScatterAdd"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/mul_4"
  input: "^linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Sqrt_1"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/mul_6"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/truediv"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/add"
  op: "Add"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/Sqrt_1"
  input: "linear/regression_head/train_op/Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/truediv_1"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/mul_6"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/AssignSub"
  op: "AssignSub"
  input: "linear/zipcode/weights/part_0"
  input: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/group_deps"
  op: "NoOp"
  input: "^linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/AssignSub"
  input: "^linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/ScatterAdd"
  input: "^linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/bias_weight/part_0"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/mul"
  op: "Mul"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "^linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/train_op/beta1_power"
  input: "linear/regression_head/train_op/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "^linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/Assign_1"
  op: "Assign"
  input: "linear/regression_head/train_op/beta2_power"
  input: "linear/regression_head/train_op/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update"
  op: "NoOp"
  input: "^linear/regression_head/train_op/Adam/Assign"
  input: "^linear/regression_head/train_op/Adam/Assign_1"
  input: "^linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/zipcode/weights/part_0/group_deps"
}
node {
  name: "linear/regression_head/train_op/Adam/value"
  op: "Const"
  input: "^linear/regression_head/train_op/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "linear/regression_head/train_op/Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/total/Assign"
  op: "Assign"
  input: "linear/regression_head/metrics/mean/total"
  input: "linear/regression_head/metrics/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/total/read"
  op: "Identity"
  input: "linear/regression_head/metrics/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/count/Assign"
  op: "Assign"
  input: "linear/regression_head/metrics/mean/count"
  input: "linear/regression_head/metrics/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/count/read"
  op: "Identity"
  input: "linear/regression_head/metrics/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/ToFloat"
  op: "Cast"
  input: "linear/regression_head/metrics/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Sum"
  op: "Sum"
  input: "linear/regression_head/mean_squared_loss/loss"
  input: "linear/regression_head/metrics/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/AssignAdd"
  op: "AssignAdd"
  input: "linear/regression_head/metrics/mean/total"
  input: "linear/regression_head/metrics/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "linear/regression_head/metrics/mean/count"
  input: "linear/regression_head/metrics/mean/ToFloat"
  input: "^linear/regression_head/mean_squared_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/truediv"
  op: "RealDiv"
  input: "linear/regression_head/metrics/mean/total/read"
  input: "linear/regression_head/metrics/mean/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Greater"
  op: "Greater"
  input: "linear/regression_head/metrics/mean/count/read"
  input: "linear/regression_head/metrics/mean/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/value"
  op: "Select"
  input: "linear/regression_head/metrics/mean/Greater"
  input: "linear/regression_head/metrics/mean/truediv"
  input: "linear/regression_head/metrics/mean/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/truediv_1"
  op: "RealDiv"
  input: "linear/regression_head/metrics/mean/AssignAdd"
  input: "linear/regression_head/metrics/mean/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/zeros_like_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Greater_1"
  op: "Greater"
  input: "linear/regression_head/metrics/mean/AssignAdd_1"
  input: "linear/regression_head/metrics/mean/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/update_op"
  op: "Select"
  input: "linear/regression_head/metrics/mean/Greater_1"
  input: "linear/regression_head/metrics/mean/truediv_1"
  input: "linear/regression_head/metrics/mean/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^linear/bathroom/weight/part_0/Assign"
  input: "^linear/bedroom/weight/part_0/Assign"
  input: "^linear/bias_weight/part_0/Assign"
  input: "^linear/property_type/weights/part_0/Assign"
  input: "^linear/regression_head/linear/bathroom/weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/bathroom/weight/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/bedroom/weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/bedroom/weight/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/bias_weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/bias_weight/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/property_type/weights/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/property_type/weights/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/size_bucketized/weights/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/zipcode/weights/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/zipcode/weights/part_0/Adam_1/Assign"
  input: "^linear/regression_head/train_op/beta1_power/Assign"
  input: "^linear/regression_head/train_op/beta2_power/Assign"
  input: "^linear/size_bucketized/weights/part_0/Assign"
  input: "^linear/zipcode/weights/part_0/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "linear/size_bucketized/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "linear/bathroom/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "linear/bedroom/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "linear/property_type/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "linear/zipcode/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "linear/regression_head/train_op/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "linear/regression_head/train_op/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "linear/regression_head/metrics/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "linear/regression_head/metrics/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 23
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: "global_step"
        string_val: "linear/size_bucketized/weights/part_0"
        string_val: "linear/bathroom/weight/part_0"
        string_val: "linear/bedroom/weight/part_0"
        string_val: "linear/property_type/weights/part_0"
        string_val: "linear/zipcode/weights/part_0"
        string_val: "linear/bias_weight/part_0"
        string_val: "linear/regression_head/train_op/beta1_power"
        string_val: "linear/regression_head/train_op/beta2_power"
        string_val: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/property_type/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/zipcode/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bias_weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
        string_val: "linear/regression_head/metrics/mean/total"
        string_val: "linear/regression_head/metrics/mean/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 23
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 23
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 23
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "linear/size_bucketized/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "linear/bathroom/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "linear/bedroom/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "linear/property_type/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "linear/zipcode/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "linear/regression_head/train_op/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "linear/regression_head/train_op/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 21
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 21
          }
        }
        string_val: "global_step"
        string_val: "linear/size_bucketized/weights/part_0"
        string_val: "linear/bathroom/weight/part_0"
        string_val: "linear/bedroom/weight/part_0"
        string_val: "linear/property_type/weights/part_0"
        string_val: "linear/zipcode/weights/part_0"
        string_val: "linear/bias_weight/part_0"
        string_val: "linear/regression_head/train_op/beta1_power"
        string_val: "linear/regression_head/train_op/beta2_power"
        string_val: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/property_type/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/zipcode/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bias_weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 21
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 21
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 21
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^linear/regression_head/metrics/mean/count/Assign"
  input: "^linear/regression_head/metrics/mean/total/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_77783e3320194282a4d2c736ce2c5cf1/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 21
          }
        }
        string_val: "global_step"
        string_val: "linear/bathroom/weight"
        string_val: "linear/bathroom/weight/bathroom/weight/part_0/Adam"
        string_val: "linear/bathroom/weight/bathroom/weight/part_0/Adam_1"
        string_val: "linear/bedroom/weight"
        string_val: "linear/bedroom/weight//bedroom/weight/part_0/Adam"
        string_val: "linear/bedroom/weight//bedroom/weight/part_0/Adam_1"
        string_val: "linear/bias_weight"
        string_val: "linear/bias_weight/ear/bias_weight/part_0/Adam"
        string_val: "linear/bias_weight/ear/bias_weight/part_0/Adam_1"
        string_val: "linear/property_type/weights"
        string_val: "linear/property_type/weights/ty_type/weights/part_0/Adam"
        string_val: "linear/property_type/weights/ty_type/weights/part_0/Adam_1"
        string_val: "linear/regression_head/train_op/beta1_power"
        string_val: "linear/regression_head/train_op/beta2_power"
        string_val: "linear/size_bucketized/weights"
        string_val: "linear/size_bucketized/weights/ketized/weights/part_0/Adam"
        string_val: "linear/size_bucketized/weights/ketized/weights/part_0/Adam_1"
        string_val: "linear/zipcode/weights"
        string_val: "linear/zipcode/weights/zipcode/weights/part_0/Adam"
        string_val: "linear/zipcode/weights/zipcode/weights/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 21
          }
        }
        string_val: ""
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "50 1 0,50:0,1"
        string_val: "50 1 0,50:0,1"
        string_val: "50 1 0,50:0,1"
        string_val: ""
        string_val: ""
        string_val: "31 1 0,31:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "1000 1 0,1000:0,1"
        string_val: "1000 1 0,1000:0,1"
        string_val: "1000 1 0,1000:0,1"
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step"
  input: "linear/bathroom/weight/part_0/read"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam/read"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1/read"
  input: "linear/bedroom/weight/part_0/read"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam/read"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1/read"
  input: "linear/bias_weight/part_0/read"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam/read"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1/read"
  input: "linear/property_type/weights/part_0/read"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam/read"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/read"
  input: "linear/regression_head/train_op/beta1_power"
  input: "linear/regression_head/train_op/beta2_power"
  input: "linear/size_bucketized/weights/part_0/read"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/read"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/read"
  input: "linear/zipcode/weights/part_0/read"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam/read"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1/read"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 21
          }
        }
        string_val: "global_step"
        string_val: "linear/bathroom/weight"
        string_val: "linear/bathroom/weight/bathroom/weight/part_0/Adam"
        string_val: "linear/bathroom/weight/bathroom/weight/part_0/Adam_1"
        string_val: "linear/bedroom/weight"
        string_val: "linear/bedroom/weight//bedroom/weight/part_0/Adam"
        string_val: "linear/bedroom/weight//bedroom/weight/part_0/Adam_1"
        string_val: "linear/bias_weight"
        string_val: "linear/bias_weight/ear/bias_weight/part_0/Adam"
        string_val: "linear/bias_weight/ear/bias_weight/part_0/Adam_1"
        string_val: "linear/property_type/weights"
        string_val: "linear/property_type/weights/ty_type/weights/part_0/Adam"
        string_val: "linear/property_type/weights/ty_type/weights/part_0/Adam_1"
        string_val: "linear/regression_head/train_op/beta1_power"
        string_val: "linear/regression_head/train_op/beta2_power"
        string_val: "linear/size_bucketized/weights"
        string_val: "linear/size_bucketized/weights/ketized/weights/part_0/Adam"
        string_val: "linear/size_bucketized/weights/ketized/weights/part_0/Adam_1"
        string_val: "linear/zipcode/weights"
        string_val: "linear/zipcode/weights/zipcode/weights/part_0/Adam"
        string_val: "linear/zipcode/weights/zipcode/weights/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 21
          }
        }
        string_val: ""
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "50 1 0,50:0,1"
        string_val: "50 1 0,50:0,1"
        string_val: "50 1 0,50:0,1"
        string_val: ""
        string_val: ""
        string_val: "31 1 0,31:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "1000 1 0,1000:0,1"
        string_val: "1000 1 0,1000:0,1"
        string_val: "1000 1 0,1000:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "linear/bathroom/weight/part_0"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "linear/bedroom/weight/part_0"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "linear/bias_weight/part_0"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "linear/property_type/weights/part_0"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "linear/regression_head/train_op/beta1_power"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "linear/regression_head/train_op/beta2_power"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear/zipcode/weights/part_0"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear/regression_head/linear/zipcode/weights/part_0/Adam_1"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 27
}
